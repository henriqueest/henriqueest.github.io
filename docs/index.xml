<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Henrique JP Alves</title>
    <link>https://henriqueest.github.io/</link>
      <atom:link href="https://henriqueest.github.io/index.xml" rel="self" type="application/rss+xml" />
    <description>Henrique JP Alves</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>https://henriqueest.github.io/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>Henrique JP Alves</title>
      <link>https://henriqueest.github.io/</link>
    </image>
    
    <item>
      <title>Rmarkdown para iniciantes</title>
      <link>https://henriqueest.github.io/courses/markdown/curso/</link>
      <pubDate>Mon, 24 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/courses/markdown/curso/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://rpubs.com/Henriqueufla/apres_mark&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Curso Markdown&lt;/a&gt;&lt;/p&gt;
&lt;!-- [Prática](https://rpubs.com/Henriqueufla/apres_mark) --&gt;
</description>
    </item>
    
    <item>
      <title>Pacote ggplot2: um curso introdutório</title>
      <link>https://henriqueest.github.io/courses/example/python/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/courses/example/python/</guid>
      <description>&lt;p&gt;Construído baseado nos pacotes tidyverse e ggplot2 do R.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 2 horas por dia, por 2 dias&lt;/p&gt;
&lt;style&gt;
body {
  text-align: justify;
  font-size: 12pt;
  }
code.r{
  font-size: 10px;
}
pre {
  font-size: 12px
}
&lt;/style&gt;
&lt;h2 id=&#34;primeira-parte&#34;&gt;&lt;strong&gt;PRIMEIRA PARTE&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Primeiramente, todo e qualquer resultado estatístico obtido em qualquer software estatístico deve ser bem compreendido antes de sua apresentação. As saídas gráficas desses resultados compreendem uma importante ferramenta resumidora do comportamento dos dados amostrais observados e até mesmo de poulações inteiras, envolvendo diversos fenômenos que podem ser compreendidos usando essas ferramentas estatísticas. As saídas gráficas do &lt;strong&gt;R&lt;/strong&gt; e do &lt;strong&gt;rstudio&lt;/strong&gt; não são diferentes.&lt;/p&gt;
&lt;p&gt;Aqui nessas notas nós poderíamos simplesmente selecionar alguns pacotes disponíveis no &lt;strong&gt;rstudio&lt;/strong&gt; que fornecem uma guia interativa para a produção de gráficos no pacote &lt;strong&gt;ggplot2&lt;/strong&gt; e apresentá-los, tais como os pacotes &lt;strong&gt;esquisse&lt;/strong&gt; e &lt;strong&gt;ggplotgui&lt;/strong&gt;. Mas esse não é o nosso objetivo.&lt;/p&gt;
&lt;p&gt;Portanto, nós iremos apresentar o pacote &lt;strong&gt;ggplot2&lt;/strong&gt; de forma lenta e gradativa, apresentando o seu diferencial com relação a outros pacotes e também outras funções de saídas gráficas do &lt;strong&gt;R&lt;/strong&gt; e do &lt;strong&gt;rstudio&lt;/strong&gt;, além de mostrar o passo a passo de como se dá a construção de saídas gráficas desse pacote no &lt;strong&gt;rstudio&lt;/strong&gt;, entendo suas funções internas e seus argumentos.&lt;/p&gt;
&lt;p&gt;Antes de iniciarmos a apresentação desse pacote, apresentamos um conjunto de funções que verificrá se os pacotes aqui necessários estão instalados no &lt;strong&gt;rstudio&lt;/strong&gt; e, em seguida, fará o carregamento desses pacotes no mesmo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;packages &amp;lt;- c(&amp;quot;dplyr&amp;quot;,&amp;quot;tidyverse&amp;quot;,&amp;quot;lattice&amp;quot;,  &amp;quot;rgdal&amp;quot;, &amp;quot;rgeos&amp;quot;, &amp;quot;maptools&amp;quot;, &amp;quot;plyr&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;covid19br&amp;quot;, &amp;quot;RColorBrewer&amp;quot;)

# instala os pacotes que não estão instalados
installed_packages &amp;lt;- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

# carrega os pacotes
invisible(lapply(packages, library, character.only = TRUE))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;introdução&#34;&gt;Introdução&lt;/h2&gt;
&lt;p&gt;Não é incomum em qualquer análise estatítica de um conjunto de dados, nos depararmos com a necessidade da utilização de recursos gráficos para representar e conhecer, de forma resumida, o comportamento das variáveis de interesse do mesmo. O &lt;strong&gt;R&lt;/strong&gt; possui algumas funções implementadas em sua base (não é necessário a instalação de pacotes), tais como as funções &lt;em&gt;plot&lt;/em&gt;, &lt;em&gt;hist&lt;/em&gt;, &lt;em&gt;barplot&lt;/em&gt;, &lt;em&gt;boxplot&lt;/em&gt;, &lt;em&gt;pie&lt;/em&gt;, entre outras e também, alguns pacotes de recursos gráficos, como o &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Vamos agora exemplificar como construir um histograma e um gráfico de barras utilizando as respectivas funções disponíveis na base do &lt;strong&gt;R&lt;/strong&gt; e também o pacote mencionado utilizando o conjunto de dados &lt;a href=&#34;https://gist.github.com/seankross/a412dfbd88b3db70b74b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mtcars&lt;/a&gt; disponível no &lt;strong&gt;R&lt;/strong&gt;. Os dados foram coletados da revista &amp;ldquo;Motor Trend US (1974)&amp;rdquo; e diz respeito ao consumo de combustível e também outros 10 aspectos de design e desempenho de 32 modelos de automóveis compreendidos entre os anos de 1973 e 1974.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars &amp;lt;- within(mtcars, {
   vs &amp;lt;- factor(vs, labels = c(&amp;quot;V&amp;quot;, &amp;quot;S&amp;quot;))
   am &amp;lt;- factor(am, labels = c(&amp;quot;automatica&amp;quot;, &amp;quot;manual&amp;quot;))
   cyl  &amp;lt;- ordered(cyl)
   gear &amp;lt;- ordered(gear)
   carb &amp;lt;- ordered(carb)
})
summary(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       mpg        cyl         disp             hp             drat      
##  Min.   :10.40   4:11   Min.   : 71.1   Min.   : 52.0   Min.   :2.760  
##  1st Qu.:15.43   6: 7   1st Qu.:120.8   1st Qu.: 96.5   1st Qu.:3.080  
##  Median :19.20   8:14   Median :196.3   Median :123.0   Median :3.695  
##  Mean   :20.09          Mean   :230.7   Mean   :146.7   Mean   :3.597  
##  3rd Qu.:22.80          3rd Qu.:326.0   3rd Qu.:180.0   3rd Qu.:3.920  
##  Max.   :33.90          Max.   :472.0   Max.   :335.0   Max.   :4.930  
##        wt             qsec       vs              am     gear   carb  
##  Min.   :1.513   Min.   :14.50   V:18   automatica:19   3:15   1: 7  
##  1st Qu.:2.581   1st Qu.:16.89   S:14   manual    :13   4:12   2:10  
##  Median :3.325   Median :17.71                          5: 5   3: 3  
##  Mean   :3.217   Mean   :17.85                                 4:10  
##  3rd Qu.:3.610   3rd Qu.:18.90                                 6: 1  
##  Max.   :5.424   Max.   :22.90                                 8: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos escolher a variável mpg (milhas percorrida por galão de combustível), que é de natureza numérica e contínua para gerarmos um histograma (frequência absoluta) utilizando a  função &lt;em&gt;hist&lt;/em&gt; da base do &lt;strong&gt;R&lt;/strong&gt; e também utilizando o pacote &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;hist(mtcars$mpg, col = &amp;quot;lightblue&amp;quot;, main = &amp;quot;Função hist (base)&amp;quot;, 
     xlab = &amp;quot;Milhas por galão (mpg)&amp;quot;, ylab = &amp;quot;Frequência absoluta&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lattice)
histogram(~mpg,data=mtcars,
       type =&amp;quot;count&amp;quot;,
       xlab =&amp;quot;Milhas por galão (mpg)&amp;quot;,
       ylab = &amp;quot;Frequência absoluta&amp;quot;,
       main =&amp;quot;Função histogram (lattice)&amp;quot;,
       col = &amp;quot;lightblue&amp;quot;,
       breaks = 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora utilizar a variável cyl (número de cilindros) para construírmos um gráfico de barras (frequência absoluta) utilizando a função &lt;em&gt;barplot&lt;/em&gt; da base do &lt;strong&gt;R&lt;/strong&gt; e também o pacote &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tab &amp;lt;- table(mtcars$cyl)
tab
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  4  6  8 
## 11  7 14
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;barplot(tab, col = &amp;quot;lightblue&amp;quot;, main = &amp;quot;Função barplot (base)&amp;quot;, xlab = &amp;quot;Número de cilindros por motor (cyl)&amp;quot;, ylab = &amp;quot;Frequência absoluta&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lattice)
tabela &amp;lt;- xtabs(~cyl, data = mtcars)
tabela
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## cyl
##  4  6  8 
## 11  7 14
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;barchart(tabela,
         horizontal = FALSE,
         main = &amp;quot;Função barchart (lattice)&amp;quot;,
         xlab = &amp;quot;Número de cilindros por motor (cyl)&amp;quot;,
         ylab = &amp;quot;Frequência absoluta&amp;quot;,
         col = &amp;quot;lightblue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Bastam esses dois exemplos para percebermos algumas situações: para cada tipo de gráfico escolhido de acordo com a natureza da variável, o conjunto de linhas de comandos necessários para gerá-los no &lt;strong&gt;R&lt;/strong&gt; é único e particular; é necessário também a utilização de funções adicionais (table) e funções específicas do pacote &lt;strong&gt;lattice&lt;/strong&gt; (xtabs) para a construção dos gráficos de barras. Essas situações forçam o usuário a ter conhecimento de cada uma dessas funções particulares e também seus argumentos.&lt;/p&gt;
&lt;p&gt;Essas justificativas são suficientes para pensarmos em algum pacote que torne mais fácil ao usuário a construção de gráficos no &lt;strong&gt;R&lt;/strong&gt;. Esse pacote existe e é o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;, que é o objetivo desse curso. Vamos conhecer um pouco mais desse pacote e observar suas vantagens.&lt;/p&gt;
&lt;h2 id=&#34;o-pacote-ggplot2&#34;&gt;&lt;em&gt;O pacote ggplot2&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;No ano de 2005, o estatístico, cientista computacional e professor adjunto norte-americano Leland Wilkinson, da University of Illinois (Chicago), publicou o livro &amp;ldquo;The grammar of Graphics&amp;rdquo;, que trata de uma fonte de princípios fundamentais para a construção de gráficos estatísticos. O autor defende a ideia que um gráfico é uma mapeamento dos dados em atributos estéticos (posição, cor, forma, tamanho, etc) de formas geométricas (pontos, linhas, barras, caixas, etc).&lt;/p&gt;
&lt;p&gt;Em sua tese de doutorado (2008), Hadley Wickham adotou a filosofia defendida por Leland para responder a pergunta &amp;ldquo;O que é um gráfico estatístico?&amp;rdquo;, criando, então, o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Hadley então, escreveu o livro &amp;ldquo;A Layered Grammar of Graphics&amp;rdquo;, onde incrementou às ideias de Leland a visão de que os elementos de um gráfico (dados, sistema de coordenadas, rótulos, anotações, entre outros) são as suas camadas e que a construção de um gráfico se dá pela sobreposição dessas camadas. Essa é a essência do pacote &lt;strong&gt;ggplot2&lt;/strong&gt;: construir um gráfico camada por camada.&lt;/p&gt;
&lt;p&gt;Aliado a essa filosofia bem fundamentada, esse pacote ainda traz algumas vantagens: geralmente os gráficos construídos são mais bonitos e apresentáveis, são de fácil personalização e apresentam uma estrutura (sintaxe) padronizada.&lt;/p&gt;
&lt;h2 id=&#34;a-gramática-em-camadas-de-gráficos&#34;&gt;A gramática em camadas de gráficos&lt;/h2&gt;
&lt;p&gt;Basicamente podemos descrever individualmente qualquer gráfico estatístico como uma combinação de um conjunto de dados, um geom, um conjunto de mapeamentos, um stat, um ajuste de posição, um sistema de coordenadas e um esquema de facetas.&lt;/p&gt;
&lt;p&gt;Abaixo apresentamos os seis elementos que envolvem a construção de gráficos estatísticos no ggplot2. Os elementos marcados com * são essenciais e obrigatórios. Os termos em negrito, como em &lt;strong&gt;aes&lt;/strong&gt;, representam as funções a serem utilizadas no ggplot2 para a construção dos gráficos estatísticos.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Elementos&lt;/th&gt;
&lt;th&gt;Exemplos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;aes&lt;/strong&gt;tética$^*$&lt;/td&gt;
&lt;td&gt;cor, formato&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;geom&lt;/strong&gt;etrias$^*$&lt;/td&gt;
&lt;td&gt;barra, ponto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;e&lt;strong&gt;stat&lt;/strong&gt;ísticas (modelos)&lt;/td&gt;
&lt;td&gt;mediana, máximo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;facet&lt;/strong&gt;as&lt;/td&gt;
&lt;td&gt;facetas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;coord&lt;/strong&gt;enadas&lt;/td&gt;
&lt;td&gt;polar, cartesiana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;them&lt;/strong&gt;as&lt;/td&gt;
&lt;td&gt;eixos, títulos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Vamos agora realizar essa construção passo a passo no &lt;strong&gt;R&lt;/strong&gt;. Os dados devem ser um data.frame. Essa condição é obrigatória para o uso do ggplot2. Primeiramente vamos instalar e carregar o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;. Depois, vamos colocar o conjunto de dados &lt;em&gt;mtcars&lt;/em&gt;, disponível no &lt;strong&gt;R&lt;/strong&gt;, em data.frame. Feito isso, nós estamos em condições de iniciar a construção de gráficos no &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A primeira camada (layer) necessária para a criação de gráficos no &lt;strong&gt;ggplot2&lt;/strong&gt; é dada pelo comando ggplot(dados). Neste comando, estamos criando a área onde o gráfico será construído e, ainda, informando ao &lt;strong&gt;ggplot2&lt;/strong&gt; qual o conjunto de dados que contém as variáveis de interesse.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Nós notamos que é criado uma área (em cinza) onde será construído o gráfico. Essa área ainda não contém nenhum formato geométrico (geom_tipo) como, por exemplo, pontos, barras, caixas, etc. Falta também a informação da estética do gráfico desejado juntamente com as variáveis de interesse aes(x,y,cores). Esse é o próximo passo. Note também que a cada acréscimo de camada utilzamos o sinal &lt;code&gt;+&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A variável mpg já foi apresentada e utilizada nos gráficos anteriores. A variável disp significa quantas cilindradas o motor do veículo possui. Note que ainda não escolhemos a cor dos pontos do gráfico nem rotulamos seus eixos. Nosso gráfico ainda está incompleto.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg))
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;No pacote &lt;strong&gt;gplot2&lt;/strong&gt; nós também temos a liberdade de escolher a escala de cores que iram compor o nosso gráfico. Para isso temos três argumentos: color e colour, que se diferem devido a lingua ingleza e fill. Os dois primeiros são utilizados em entes geométricos que não possuem área, tais como pontos e linhas, sendo necessário utilizar apenas um deles e a escolha fica a critério do usuário. Já o comando fill é utilizado naquele ente geométrico que possui área, sendo responsável pelo preenchimento dessa área com a cor desejada. Ambos devem ser utilizados junto ao comando geom_tipo.&lt;/p&gt;
&lt;p&gt;Vamos agora ver dois exemplos de utilização desses argumentos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg, color=as.factor(am))) +
  labs(x=&amp;quot;Cilindradas&amp;quot;, y=&amp;quot;Milhas/galão&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg), color=c(&amp;quot;red&amp;quot;)) +
  labs(x=&amp;quot;Cilindradas&amp;quot;, y=&amp;quot;Milhas/galão&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Nós notamos que se utilizarmos o argumento para a escolha das cores dentro da função aes, este deve estar relaciondo a alguma variável específica. No nosso exemplo, é o tipo de transmissão do carro a variável em questão. Caso esse argumento seja utilizado fora da função aes, nós temos a liberdade de escolha das cores, pois ela não estão relacionadas as variáveis em questão.&lt;/p&gt;
&lt;p&gt;Tente utilizar o argumento de cores relacionado a variávies fora da função aes e verá que o &lt;strong&gt;R&lt;/strong&gt; retornará uma mensagem de erro, dizendo que não reconhece a variável.&lt;/p&gt;
&lt;p&gt;Vamos agora apresentar um gráfico de barras onde o interesse é apresentar as frequências absolutas, relativas e percentual da quantidade de cilindros que o motor do carro possui (cyl) separados por tipo de transmissão (am) .&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..), fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
    labs(x = &amp;quot;Número de cilindros por motor&amp;quot;, y = &amp;quot;Frequência absoluta&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..)/sum(..count..), fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
  labs(x = &amp;quot;Número de cilindros por motor&amp;quot;, y = &amp;quot;Frequência relativa&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..)/sum(..count..)*100, fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
  labs(x = &amp;quot;Número de cilindros por motor&amp;quot;, y = &amp;quot;Frequência percentual&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora construir um gráfico do tipo boxplot utilizando o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;Número de cilindros&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;top&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;Número de cilindros&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;Número de cilindros&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;left&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; cor &amp;lt;- gray(0:2 / 2)
 ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, 
               alpha=0.2) +
  labs(x = &amp;quot;Número de cilindros&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;, fill = &amp;quot;Tipo de transmisão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;right&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) +
  scale_fill_manual(values=cor)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora construir alguns histogramas com frequências absolutas, relativas e percentuais, nessa ordem. Note que o comando &lt;code&gt;bins&lt;/code&gt; define o número de classes a ser escolhido. Neste exemplo escolhemos arbitrariamente &lt;code&gt;bins&lt;/code&gt; igual a 5, mas o usuário pode fazer os cálculos manualmente e utilizá-lo. Nós também definimos a escala dos eixos &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; manualmente, através dos comandos &lt;code&gt;scale_x_continuous&lt;/code&gt; e &lt;code&gt;scale_y_continuous&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..)/sum(..count..), fill=as.factor(am)), 
                 bins=5, colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/galão&amp;quot;, y = &amp;quot;Frequência relativa&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,1,0.1)))+
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..), fill=as.factor(am)), bins=5,  
                 colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/galão&amp;quot;, y = &amp;quot;Frequência absoluta&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,15,3.5))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..), fill=as.factor(am)), bins=5,  
                 colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/galão&amp;quot;, y = &amp;quot;Frequência absoluta&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,15,3.5))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Antes de construírmos o próximo histograma, precisamos apresentar a função &lt;code&gt;facet&lt;/code&gt; do ggplot2. Esta função permite a construção de gráficos em &lt;code&gt;facetas&lt;/code&gt;. O que é isso? Suponha que estamos interessados em construírmos um histograma baseado no anteriormente apresentado. Mas o nosso interesse maior é apresentar um histograma individual para cada tipo de transmissão &lt;code&gt;am&lt;/code&gt; considerando a variável contínua &lt;code&gt;mpg&lt;/code&gt;. Abaixo apresentamos a construção deste histograma.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; cor &amp;lt;- gray(0:1 / 2)
 ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..)/sum(..count..)*100, fill=as.factor(am)), 
                 bins=5, colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  facet_wrap(~am)+
  labs(x = &amp;quot;Milhas/galão&amp;quot;, y = &amp;quot;Frequência percentual&amp;quot;, fill = &amp;quot;Tipo de transmissão&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,60,10))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=20), 
        legend.text=element_text(size=20), axis.text=element_text(size=12),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        strip.text.x = element_text(size=0),
        strip.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora apresentar um exemplo de como construir um gráfico de tendência destacando-se os pontos de dispersão dos dados.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars, aes(x = disp, y = mpg)) +
  geom_point(aes(colour=as.factor(am)), alpha=0.6, size=1.7)+
  geom_line(aes(colour=as.factor(am)), alpha=0.2, size=1.7, linetype=1)+
  labs(x = &amp;quot;Cilindradas&amp;quot;, y = &amp;quot;Milhas/galão&amp;quot;, colour = &amp;quot;Tipo de transmissão&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Como o usuário faria para construir estes histogramas e gráficos de tendência sem utilizar a classificação por níveis da variável &lt;strong&gt;am&lt;/strong&gt;? A construção destes gráficos fica como exercício para o usuário.&lt;/p&gt;
&lt;h2 id=&#34;segunda-parte&#34;&gt;&lt;strong&gt;Segunda parte&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&#34;construindo-gráficos-a-partir-de-um-conjunto-de-dados-original-usando-os-pacotes-tydeverse-tibble-e-dplyr-do-r&#34;&gt;Construindo gráficos a partir de um conjunto de dados original usando os pacotes tydeverse, tibble e dplyr do R.&lt;/h2&gt;
&lt;p&gt;O que preciso saber do pacote &lt;strong&gt;dplyr&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Funções&lt;/th&gt;
&lt;th&gt;Resultados&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;filter()&lt;/td&gt;
&lt;td&gt;seleciona observações das variáveis por seus valores assumidos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arrange()&lt;/td&gt;
&lt;td&gt;reordena as linhas (observações)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select()&lt;/td&gt;
&lt;td&gt;seleciona variáveis por seus nomes (rótulos)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mutate()&lt;/td&gt;
&lt;td&gt;cria novas variáveis com funções de variáveis existentes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summarize()&lt;/td&gt;
&lt;td&gt;reune muitos valores em um único resumo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;group_by()&lt;/td&gt;
&lt;td&gt;muda o escopo de cada função anterior em todo o conjunto de dados para operar grupo por grupo.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Uma vez apresentado as funções do pacote &lt;strong&gt;dplyr&lt;/strong&gt;, vamos agora apresentar os argumentos dessas funções. O primeiro argumento é um data frame. Os argumentos subsequentes descrevem o que fazer com o data frame usando os nomes das variáveis sem aspas.&lt;/p&gt;
&lt;p&gt;O pacote &lt;strong&gt;covid19br&lt;/strong&gt; foi criado por pesquisadores da UFMG e permite ao usuário a coleta, em tempo real, de algumas informações sobre a doença &lt;strong&gt;COVID-19&lt;/strong&gt; nas unidades de saúde do Brasil, apresentando informações como número de casos e mortes novos e acumulados, diariamente, no Brasil e no mundo. Ainda, essas informações estão separadas por estado, região, municípios, por semana epidemiológica, datas, entre outros.&lt;/p&gt;
&lt;p&gt;Nós vamos aproveitar esse pacote para apresentarmos as funções do pacote &lt;strong&gt;dplyr&lt;/strong&gt; e também construir gráficos com o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- downloadCovid19(&amp;quot;states&amp;quot;)# dados por municípios brasileiros
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Downloading COVID-19 data from the official Brazilian repository: https://covid.saude.gov.br/
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please, be patient...
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Done!
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;glimpse(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 26,136
## Columns: 12
## $ region       &amp;lt;chr&amp;gt; &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;No~
## $ state        &amp;lt;chr&amp;gt; &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO~
## $ date         &amp;lt;date&amp;gt; 2020-02-25, 2020-02-26, 2020-02-27, 2020-02-28, 2020-02-~
## $ epi_week     &amp;lt;int&amp;gt; 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11~
## $ newCases     &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ accumCases   &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ newDeaths    &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ accumDeaths  &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ newRecovered &amp;lt;int&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N~
## $ newFollowup  &amp;lt;int&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N~
## $ pop          &amp;lt;dbl&amp;gt; 1777225, 1777225, 1777225, 1777225, 1777225, 1777225, 177~
## $ state_code   &amp;lt;int&amp;gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Não se preocupe com a estrutura apresentada nesse conjunto de dados. Trata-se de um &lt;strong&gt;tibble&lt;/strong&gt;, um data frame com algumas particularidades. Note que essas estrutura de data frame traz algumas informações, como a dimensão dos dados, o tipo de variável que está em cada uma das colunas (categórica, inteiro, caractere, etc.), entre outras.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Representação&lt;/th&gt;
&lt;th&gt;Tipo de variável&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;números inteiros&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbl&lt;/td&gt;
&lt;td&gt;doubles (números reais)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chr&lt;/td&gt;
&lt;td&gt;vetores de caracteres (strings)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dttm&lt;/td&gt;
&lt;td&gt;datas-tempos (uma data + um horário)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fctr&lt;/td&gt;
&lt;td&gt;valores lógicos (TRUE ou FALSE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;datas&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Antes de apresentarmos as funções do pacote &lt;strong&gt;dplyr&lt;/strong&gt; precisamos conhecer alguns caracteres lógicos e suas representações.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caractere lógico&lt;/th&gt;
&lt;th&gt;Representação&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;conectivo &lt;code&gt;e&lt;/code&gt; (interseção)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;conectivo &lt;code&gt;ou&lt;/code&gt; (união)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;maior do que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;menor do que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;maior do que ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;menor do que ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;diferente&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%in%&lt;/td&gt;
&lt;td&gt;concatenar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As funções do pacote &lt;strong&gt;dplyr&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;filter(data, date &amp;gt;= &amp;quot;2022-02-20&amp;quot; &amp;amp; state == &amp;quot;SP&amp;quot; &amp;amp; epi_week == 8)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       region state       date epi_week newCases accumCases newDeaths
## 1: Southeast    SP 2022-02-20        8     6424    4935771        26
## 2: Southeast    SP 2022-02-21        8     2470    4938241        23
## 3: Southeast    SP 2022-02-22        8    15999    4954240       310
## 4: Southeast    SP 2022-02-23        8    15427    4969667       298
## 5: Southeast    SP 2022-02-24        8    15228    4984895       303
## 6: Southeast    SP 2022-02-25        8    14764    4999659       211
## 7: Southeast    SP 2022-02-26        8    11290    5010949       211
##    accumDeaths newRecovered newFollowup      pop state_code
## 1:      163160           NA          NA 45919049         35
## 2:      163183           NA          NA 45919049         35
## 3:      163493           NA          NA 45919049         35
## 4:      163791           NA          NA 45919049         35
## 5:      164094           NA          NA 45919049         35
## 6:      164305           NA          NA 45919049         35
## 7:      164516           NA          NA 45919049         35
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;arrange(data, state)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        region state       date epi_week newCases accumCases newDeaths
##     1:  North    AC 2020-02-25        9        0          0         0
##     2:  North    AC 2020-02-26        9        0          0         0
##     3:  North    AC 2020-02-27        9        0          0         0
##     4:  North    AC 2020-02-28        9        0          0         0
##     5:  North    AC 2020-02-29        9        0          0         0
##    ---                                                               
## 26132:  North    TO 2022-10-15       41        0     344594         0
## 26133:  North    TO 2022-10-16       42        0     344594         0
## 26134:  North    TO 2022-10-17       42       19     344613         0
## 26135:  North    TO 2022-10-18       42        0     344613         0
## 26136:  North    TO 2022-10-19       42        0     344613         0
##        accumDeaths newRecovered newFollowup     pop state_code
##     1:           0           NA          NA  881935         12
##     2:           0           NA          NA  881935         12
##     3:           0           NA          NA  881935         12
##     4:           0           NA          NA  881935         12
##     5:           0           NA          NA  881935         12
##    ---                                                        
## 26132:        4205           NA          NA 1572866         17
## 26133:        4205           NA          NA 1572866         17
## 26134:        4205           NA          NA 1572866         17
## 26135:        4205           NA          NA 1572866         17
## 26136:        4205           NA          NA 1572866         17
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;select(data, region , date,  state, newCases, accumCases)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         region       date state newCases accumCases
##     1:   North 2020-02-25    RO        0          0
##     2:   North 2020-02-26    RO        0          0
##     3:   North 2020-02-27    RO        0          0
##     4:   North 2020-02-28    RO        0          0
##     5:   North 2020-02-29    RO        0          0
##    ---                                             
## 26132: Midwest 2022-10-15    DF        0     839752
## 26133: Midwest 2022-10-16    DF        0     839752
## 26134: Midwest 2022-10-17    DF        0     839752
## 26135: Midwest 2022-10-18    DF     2235     841987
## 26136: Midwest 2022-10-19    DF       78     842065
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mutate(data, rate_newcases = newCases/pop*100000)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         region state       date epi_week newCases accumCases newDeaths
##     1:   North    RO 2020-02-25        9        0          0         0
##     2:   North    RO 2020-02-26        9        0          0         0
##     3:   North    RO 2020-02-27        9        0          0         0
##     4:   North    RO 2020-02-28        9        0          0         0
##     5:   North    RO 2020-02-29        9        0          0         0
##    ---                                                                
## 26132: Midwest    DF 2022-10-15       41        0     839752         0
## 26133: Midwest    DF 2022-10-16       42        0     839752         0
## 26134: Midwest    DF 2022-10-17       42        0     839752         0
## 26135: Midwest    DF 2022-10-18       42     2235     841987         0
## 26136: Midwest    DF 2022-10-19       42       78     842065         0
##        accumDeaths newRecovered newFollowup     pop state_code rate_newcases
##     1:           0           NA          NA 1777225         11      0.000000
##     2:           0           NA          NA 1777225         11      0.000000
##     3:           0           NA          NA 1777225         11      0.000000
##     4:           0           NA          NA 1777225         11      0.000000
##     5:           0           NA          NA 1777225         11      0.000000
##    ---                                                                      
## 26132:       11831           NA          NA 3015268         53      0.000000
## 26133:       11831           NA          NA 3015268         53      0.000000
## 26134:       11831           NA          NA 3015268         53      0.000000
## 26135:       11831           NA          NA 3015268         53     74.122765
## 26136:       11831           NA          NA 3015268         53      2.586835
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summarize(data, mean_newdeaths=mean(newDeaths), desv_pad= sd(newDeaths),
                  standard_error=desv_pad/sqrt(length(data)))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   mean_newdeaths desv_pad standard_error
## 1       26.30177 66.46069       19.18555
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;group_by(data, region, epi_week)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 26,136 x 12
## # Groups:   region, epi_week [265]
##    region state date       epi_week newCases accumCases newDea~1 accum~2 newRe~3
##    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;        &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;      &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;
##  1 North  RO    2020-02-25        9        0          0        0       0      NA
##  2 North  RO    2020-02-26        9        0          0        0       0      NA
##  3 North  RO    2020-02-27        9        0          0        0       0      NA
##  4 North  RO    2020-02-28        9        0          0        0       0      NA
##  5 North  RO    2020-02-29        9        0          0        0       0      NA
##  6 North  RO    2020-03-01       10        0          0        0       0      NA
##  7 North  RO    2020-03-02       10        0          0        0       0      NA
##  8 North  RO    2020-03-03       10        0          0        0       0      NA
##  9 North  RO    2020-03-04       10        0          0        0       0      NA
## 10 North  RO    2020-03-05       10        0          0        0       0      NA
## # ... with 26,126 more rows, 3 more variables: newFollowup &amp;lt;int&amp;gt;, pop &amp;lt;dbl&amp;gt;,
## #   state_code &amp;lt;int&amp;gt;, and abbreviated variable names 1: newDeaths,
## #   2: accumDeaths, 3: newRecovered
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse pacote é muito útil quando desejamos realizar uma análise exploratória de nossos dados. Vamos então construir alguns gráficos utilizando os recursos desse pacote e também do &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Suponha que estamos interessados em conhecer, “a priori”, quantas mortes por COVID-19 ocorreram em cada uma das unidades federativas brasileiras, no dia 20-02-2022. Como proceder?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Dados &amp;lt;- select(data, epi_week , state, newDeaths, date)
resultados &amp;lt;- filter(Dados, epi_week == 8 &amp;amp; date == &amp;quot;2022-02-20&amp;quot;)
ggplot(resultados)+
geom_col(aes(x=as.factor(state), y=newDeaths, fill=as.factor(state)),
alpha=0.65, position = &amp;quot;stack&amp;quot;)+
labs(x = &amp;quot;Unidades da federação&amp;quot;, y = &amp;quot;Novas mortes - semana 30&amp;quot;)+
theme_bw()+
theme(legend.position=&amp;quot;none&amp;quot;,
legend.box = &amp;quot;vertical&amp;quot;,legend.title=element_text(size=8),
legend.text=element_text(size=8), axis.text=element_text(size=8),
axis.title=element_text(size=8), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
strip.text.x = element_text(size=0),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_fill_discrete(name=&amp;quot;UF&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Um fato curioso deve ser notado: quando manipulamos o conto de dados data com as funções select e filter, nós atribuímos a cada tibble gerado por essas funções um rótulo. Agora, imagine que, dentro do mesmo conjunto de dados, nós precisamos utilizar todas as seis funções do pacote &lt;strong&gt;dplyr&lt;/strong&gt;. Seria inviável proceder como da forma anterior. Para corrigir esse problema, foi criado o pacote &lt;strong&gt;magrittr&lt;/strong&gt; onde foi criado o operador pipe %&amp;gt;%. Essa ferramenta é utilizada para expressar claramente uma sequência de múltiplas operações. Este pacote já é carregado automaticamente com o &lt;strong&gt;dplyr&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Em nosso próximo exemplo, suponha que deseja-se conhecer a evolução diária das novas mortes considerando o tempo de infecção por COVID-19 da semana 1 até a semana 8 de 2021 e 2022, para as unidades federativas da região sudeste. Entretanto, para efeitos de comparação, as populações de cada uma das UF&amp;rsquo;s se difere, o que torna a comparação entre elas inviável. Esse é o motivo pelo qual calculamos algumas medidas auxiliares quando há heterogeneidade populacional. Uma dessas medidas é denominada de taxa e seu cálculo é oriundo da razão entre o número de casos favoráveis e o total de indivíduos da população de cada uma das áreas estudas, multiplicado por alguma constante de padronização. Nós vamos respeitar as regras utilizadas pelo Instituto Brasileiro de Geografia e Estatística (IBGE) e considerar essa constante igual a 100,000. Desse modo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor &amp;lt;- heat.colors(4, rev = TRUE)
resultados &amp;lt;- data %&amp;gt;%
mutate(year = as.numeric(format(date, &amp;quot;%Y&amp;quot;)),
       rate = newDeaths/pop*100000)%&amp;gt;%
select(newDeaths, epi_week, state, year, rate)%&amp;gt;%
filter(epi_week&amp;gt;= 1 &amp;amp; epi_week &amp;lt;= 8 &amp;amp; state %in% c(&amp;quot;SP&amp;quot;, &amp;quot;RJ&amp;quot;, &amp;quot;MG&amp;quot;, &amp;quot;ES&amp;quot;) &amp;amp; year %in% c(2021, 2022))
ggplot(resultados, aes(x=as.factor(epi_week), y = rate, fill=as.factor(state)))+
facet_wrap(~year)+
geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, alpha=0.45) +
labs(x = &amp;quot;Semana de infecção&amp;quot;, y = &amp;quot;Novas mortes - Sudeste&amp;quot;) +
theme_bw()+
theme(legend.position=&amp;quot;right&amp;quot;,
legend.box = &amp;quot;vertical&amp;quot;,legend.title=element_text(size=8),
legend.text=element_text(size=8), axis.text=element_text(size=8),
axis.title=element_text(size=8), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
strip.text.x = element_text(size=0),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_fill_manual(name=&amp;quot;UF&amp;quot;, values = cor)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Nós também podemos produzir mapas utilizando o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;. Entretanto, nós precisamos de algum arquivo que contenha as coordenadas do mapa desejado em forma de polígonos ou até mesmo imagens (raster). Para tal, nós vamos utilizar o pacote &lt;strong&gt;geobr&lt;/strong&gt;, que foi criado pelo Instituto de Pesquisa Econômica Aplicada - Ipea. Vejamos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;uf &amp;lt;- data %&amp;gt;%
  select(state, newDeaths, newCases, accumDeaths, accumCases, 
         pop, date)%&amp;gt;%
  filter(date == &amp;quot;2022-02-23&amp;quot;)%&amp;gt;%
  mutate(ratenewcases = newCases/pop*100000,
            rateaccumcases = accumCases/pop*100000,
            ratenewdeaths = newDeaths/pop*100000,
            rateaccumdeaths = accumDeaths/pop*100000)
library(geobr)
dados_mapa &amp;lt;- read_state(year=2019, showProgress = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using year 2019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;colnames(dados_mapa)[2] &amp;lt;- &amp;quot;state&amp;quot;
dados_final &amp;lt;- left_join(dados_mapa, uf, &amp;quot;state&amp;quot;)
glimpse(dados_final)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 27
## Columns: 16
## $ code_state      &amp;lt;dbl&amp;gt; 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27~
## $ state           &amp;lt;chr&amp;gt; &amp;quot;RO&amp;quot;, &amp;quot;AC&amp;quot;, &amp;quot;AM&amp;quot;, &amp;quot;RR&amp;quot;, &amp;quot;PA&amp;quot;, &amp;quot;AP&amp;quot;, &amp;quot;TO&amp;quot;, &amp;quot;MA&amp;quot;, &amp;quot;PI&amp;quot;, ~
## $ name_state      &amp;lt;chr&amp;gt; &amp;quot;Rondônia&amp;quot;, &amp;quot;Acre&amp;quot;, &amp;quot;Amazônas&amp;quot;, &amp;quot;Roraima&amp;quot;, &amp;quot;Pará&amp;quot;, &amp;quot;Am~
## $ code_region     &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, ~
## $ name_region     &amp;lt;chr&amp;gt; &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, ~
## $ newDeaths       &amp;lt;int&amp;gt; 16, 4, 3, 1, 17, 2, 2, 14, 5, 57, 7, 9, 15, 12, 4, 26,~
## $ newCases        &amp;lt;int&amp;gt; 2741, 654, 575, 361, 2476, 52, 723, 1283, 645, 1907, 1~
## $ accumDeaths     &amp;lt;int&amp;gt; 7036, 1966, 14101, 2126, 17716, 2100, 4095, 10739, 761~
## $ accumCases      &amp;lt;int&amp;gt; 366864, 119090, 571174, 152146, 709489, 160025, 296677~
## $ pop             &amp;lt;dbl&amp;gt; 1777225, 881935, 4144597, 605761, 8602865, 845731, 157~
## $ date            &amp;lt;date&amp;gt; 2022-02-23, 2022-02-23, 2022-02-23, 2022-02-23, 2022-~
## $ ratenewcases    &amp;lt;dbl&amp;gt; 154.229206, 74.155125, 13.873484, 59.594461, 28.781110~
## $ rateaccumcases  &amp;lt;dbl&amp;gt; 20642.519, 13503.263, 13781.171, 25116.506, 8247.125, ~
## $ ratenewdeaths   &amp;lt;dbl&amp;gt; 0.90027993, 0.45354816, 0.07238339, 0.16508161, 0.1976~
## $ rateaccumdeaths &amp;lt;dbl&amp;gt; 395.8981, 222.9189, 340.2261, 350.9635, 205.9314, 248.~
## $ geom            &amp;lt;MULTIPOLYGON [°]&amp;gt; MULTIPOLYGON (((-65.3815 -1..., MULTIPOLY~
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#plotar os mapas
dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = ratenewcases), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Novos casos - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = ratenewdeaths), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Novas mortes - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = rateaccumcases), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Casos acumulados - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = rateaccumdeaths), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Mortes acumuladas - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://henriqueest.github.io/talk/example-talk/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/talk/example-talk/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Wowchemy&amp;rsquo;s &lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further event details, including &lt;a href=&#34;https://wowchemy.com/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;page elements&lt;/a&gt; such as image galleries, can be added to the body of this page.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shiny - homicídios dolosos - Sinesp</title>
      <link>https://henriqueest.github.io/post/homicidios_dolosos/aplicativo/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/homicidios_dolosos/aplicativo/</guid>
      <description>&lt;!-- &lt;style&gt; --&gt;
&lt;!-- body { --&gt;
&lt;!--   text-align: justify; --&gt;
&lt;!--   font-size: 12pt; --&gt;
&lt;!--   } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;h2 id=&#34;histórico&#34;&gt;Histórico&lt;/h2&gt;
&lt;p&gt;Em antecipação a promulgação da Lei nº 13.675, de 11 de junho de 2018, que institui o Sistema Único de Segurança Pública e o Sistema Nacional de Informações de Segurança Pública, Prisionais, de Rastreabilidade de Armas e Munições, de Material Genético, de Digitais e de Drogas (Sinesp), a Senasp já vinha empregando esforços na coleta de dados e informações de interesse da segurança pública desde o ano de 2001, visando a implementação de ações e políticas públicas mais qualificadas.&lt;/p&gt;
&lt;p&gt;A coleta informatizada de dados teve origem na implantação do Sistema Nacional de Estatística de Segurança Pública e Justiça Criminal - SinespJC, em 2004. A solução reúne dados AGREGADOS oriundos das Unidades da Federação, permitindo a elaboração de relatórios e indicadores estatísticos. Seu conteúdo é gerado a partir dos boletins de ocorrência registrados pelas Polícias Civis dos Estados e Distrito Federal, reunindo assim, informações sobre o número de ocorrências, natureza do fato registrado, perfil da vítima, perfil do autor, meios empregados, dentre outras.&lt;/p&gt;
&lt;p&gt;O primeiro módulo implantado foi o Módulo Polícia Civil, do SinespJC, em plataforma desktop e dados estatísticos dos Boletins de Ocorrência. Em 2010, a plataforma foi reformulada para a versão SinespJC Web. Nesse modelo, os dados são coletados mensalmente através de formulários eletrônicos e disponibilizados após sua consolidação pelos Gestores Estaduais do Sinesp, permitindo a produção de relatórios a partir da unidade de análise “Município”.&lt;/p&gt;
&lt;p&gt;A partir de 2012, com a instituição do Sistema Nacional de Informações de Segurança Pública, Prisionais e sobre Drogas - SINESP, por meio da Lei n º 12.681/12, iniciaram-se os projetos para a coleta automatizada de dados e a integração dos sistemas estaduais de registro de ocorrências policiais. Em dezembro de 2014, após a conclusão da primeira etapa de planejamento e desenvolvimento da plataforma Sinesp, foi implementado o Boletim Nacional de Ocorrências Policiais - Sinesp PPE (Procedimentos Policiais Eletrônicos) no estado de Roraima, dando início à coleta de dados de registros de ocorrência em tempo real. Posteriormente, a solução foi implantada em outras Unidades da Federação.&lt;/p&gt;
&lt;p&gt;Neste cenário, em 2015, foi desenvolvido e disponibilizado às UFs o Sinesp Integração, solução destinada à consolidação de dados e informações de múltiplas fontes em uma única Base Nacional, permitindo, dentre outras atividades, a análise de microdados e a produção de estatísticas e relatórios mais qualificados.&lt;/p&gt;
&lt;h1 id=&#34;fontes-de-dados-e-indicadores&#34;&gt;FONTES DE DADOS E INDICADORES&lt;/h1&gt;
&lt;p&gt;Os dados disponíveis foram extraídos das soluções SinespJC e Sinesp Integração, fontes primárias dos seguintes indicadores: Totais de Ocorrências e Totais de Vítimas de estupro, furto de veículos, homicídio doloso, lesão corporal seguida de morte, roubo à instituição financeira, roubo de carga, roubo de veículos e roubo seguido de morte.&lt;/p&gt;
&lt;h1 id=&#34;nota&#34;&gt;NOTA&lt;/h1&gt;
&lt;p&gt;É importante ressaltar que as informações apresentadas refletem o nível de alimentação e consolidação de cada Unidade da Federação no SinespJC e Sinesp Integração na data de sua extração, podendo ocorrer atualizações posteriores à publicação. Salientamos que se considera como último período os dados consolidados que antecedem os últimos três meses, por exemplo: Em fev/2019, serão publicados os dados de jan/2015 a out/2018; em mar/2019 os dados de jan/2015 a nov/2018; e assim sucessivamente. Isso se faz necessário para que os Gestores Estaduais possam coletar, tratar e validar os dados antes do fornecimento e consolidação via SinespJC, não sendo exigido esse processo aos entes que já utilizam o Sinesp Integração e consideram os dados transmitidos como fonte para a produção das estatísticas oficiais.&lt;/p&gt;
&lt;p&gt;Com o avanço do Sinesp Integração, espera-se que as Unidades da Federação aprimorem seus processos de coleta de dados e substituam a alimentação manual do SinespJC pelo processo automatizado. Com isso, será possível a divulgação de dados detalhados em períodos mais curtos e com mais qualidade.&lt;/p&gt;
&lt;h2 id=&#34;fonte&#34;&gt;Fonte&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://dados.gov.br/dataset/sistema-nacional-de-estatisticas-de-seguranca-publica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinesp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;aplicativo&#34;&gt;Aplicativo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jpahenrique.shinyapps.io/homic_dolosos/?_ga=2.163271100.1679063446.1666814130-2114962546.1665406207&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Shiny - Homicídios dolosos - Sinespe&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>App - shiny - homicídios dolosos - Sinesp</title>
      <link>https://henriqueest.github.io/post/aplicativo_homicidios/aplicativo/</link>
      <pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/aplicativo_homicidios/aplicativo/</guid>
      <description>&lt;!-- &lt;style&gt; --&gt;
&lt;!-- body { --&gt;
&lt;!--   text-align: justify; --&gt;
&lt;!--   font-size: 12pt; --&gt;
&lt;!--   } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;h2 id=&#34;histórico&#34;&gt;Histórico&lt;/h2&gt;
&lt;p&gt;Em antecipação a promulgação da Lei nº 13.675, de 11 de junho de 2018, que institui o Sistema Único de Segurança Pública e o Sistema Nacional de Informações de Segurança Pública, Prisionais, de Rastreabilidade de Armas e Munições, de Material Genético, de Digitais e de Drogas (Sinesp), a Senasp já vinha empregando esforços na coleta de dados e informações de interesse da segurança pública desde o ano de 2001, visando a implementação de ações e políticas públicas mais qualificadas.&lt;/p&gt;
&lt;p&gt;A coleta informatizada de dados teve origem na implantação do Sistema Nacional de Estatística de Segurança Pública e Justiça Criminal - SinespJC, em 2004. A solução reúne dados AGREGADOS oriundos das Unidades da Federação, permitindo a elaboração de relatórios e indicadores estatísticos. Seu conteúdo é gerado a partir dos boletins de ocorrência registrados pelas Polícias Civis dos Estados e Distrito Federal, reunindo assim, informações sobre o número de ocorrências, natureza do fato registrado, perfil da vítima, perfil do autor, meios empregados, dentre outras.&lt;/p&gt;
&lt;p&gt;O primeiro módulo implantado foi o Módulo Polícia Civil, do SinespJC, em plataforma desktop e dados estatísticos dos Boletins de Ocorrência. Em 2010, a plataforma foi reformulada para a versão SinespJC Web. Nesse modelo, os dados são coletados mensalmente através de formulários eletrônicos e disponibilizados após sua consolidação pelos Gestores Estaduais do Sinesp, permitindo a produção de relatórios a partir da unidade de análise “Município”.&lt;/p&gt;
&lt;p&gt;A partir de 2012, com a instituição do Sistema Nacional de Informações de Segurança Pública, Prisionais e sobre Drogas - SINESP, por meio da Lei n º 12.681/12, iniciaram-se os projetos para a coleta automatizada de dados e a integração dos sistemas estaduais de registro de ocorrências policiais. Em dezembro de 2014, após a conclusão da primeira etapa de planejamento e desenvolvimento da plataforma Sinesp, foi implementado o Boletim Nacional de Ocorrências Policiais - Sinesp PPE (Procedimentos Policiais Eletrônicos) no estado de Roraima, dando início à coleta de dados de registros de ocorrência em tempo real. Posteriormente, a solução foi implantada em outras Unidades da Federação.&lt;/p&gt;
&lt;p&gt;Neste cenário, em 2015, foi desenvolvido e disponibilizado às UFs o Sinesp Integração, solução destinada à consolidação de dados e informações de múltiplas fontes em uma única Base Nacional, permitindo, dentre outras atividades, a análise de microdados e a produção de estatísticas e relatórios mais qualificados.&lt;/p&gt;
&lt;h1 id=&#34;fontes-de-dados-e-indicadores&#34;&gt;FONTES DE DADOS E INDICADORES&lt;/h1&gt;
&lt;p&gt;Os dados disponíveis foram extraídos das soluções SinespJC e Sinesp Integração, fontes primárias dos seguintes indicadores: Totais de Ocorrências e Totais de Vítimas de estupro, furto de veículos, homicídio doloso, lesão corporal seguida de morte, roubo à instituição financeira, roubo de carga, roubo de veículos e roubo seguido de morte.&lt;/p&gt;
&lt;h1 id=&#34;nota&#34;&gt;NOTA&lt;/h1&gt;
&lt;p&gt;É importante ressaltar que as informações apresentadas refletem o nível de alimentação e consolidação de cada Unidade da Federação no SinespJC e Sinesp Integração na data de sua extração, podendo ocorrer atualizações posteriores à publicação. Salientamos que se considera como último período os dados consolidados que antecedem os últimos três meses, por exemplo: Em fev/2019, serão publicados os dados de jan/2015 a out/2018; em mar/2019 os dados de jan/2015 a nov/2018; e assim sucessivamente. Isso se faz necessário para que os Gestores Estaduais possam coletar, tratar e validar os dados antes do fornecimento e consolidação via SinespJC, não sendo exigido esse processo aos entes que já utilizam o Sinesp Integração e consideram os dados transmitidos como fonte para a produção das estatísticas oficiais.&lt;/p&gt;
&lt;p&gt;Com o avanço do Sinesp Integração, espera-se que as Unidades da Federação aprimorem seus processos de coleta de dados e substituam a alimentação manual do SinespJC pelo processo automatizado. Com isso, será possível a divulgação de dados detalhados em períodos mais curtos e com mais qualidade.&lt;/p&gt;
&lt;h2 id=&#34;fonte&#34;&gt;Fonte&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://dados.gov.br/dataset/sistema-nacional-de-estatisticas-de-seguranca-publica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinesp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;aplicativo&#34;&gt;Aplicativo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jpahenrique.shinyapps.io/teste/?_ga=2.94674648.551386921.1666349234-2114962546.1665406207&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinesp - Homicídios dolosos&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aula 1 - Introdução a Estatística</title>
      <link>https://henriqueest.github.io/post/aula1_ufop/aula1/</link>
      <pubDate>Sat, 02 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/aula1_ufop/aula1/</guid>
      <description>&lt;!-- &lt;style&gt; --&gt;
&lt;!-- body { --&gt;
&lt;!--   text-align: justify; --&gt;
&lt;!--   font-size: 12pt; --&gt;
&lt;!--   } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;p&gt;Ao praticar a atividade científica, o pesquisador se depara com situações onde
ele deve analisar e entender um conjunto de dados referente ao seu objeto de estudo. Assim, ele terá que manipular os dados para obter informações, compará-las com outros resultados, ou ainda, julgar sua adequação a alguma teoria. A estatística surge então como uma ferramenta que auxilia o pesquisador neste trabalho, fornecendo metodologias adequadas de coleta, redução, análise e modelagem dos dados.&lt;/p&gt;
&lt;p&gt;Diante do exposto, podemos entender a estatística como a ciência que se ocupa
com as técnicas de coleta, organização, análise e interpretação de dados, tendo um modelo por referência.&lt;/p&gt;
&lt;h3 id=&#34;conceitos-básicos&#34;&gt;Conceitos básicos&lt;/h3&gt;
&lt;p&gt;Entende-se por população ao conjunto de elementos que têm uma determinada característica em comum. Uma população pode ser finita quando esta possui um
número limitado (ou enumerável) de indivíduos, ou infinita, quando não conseguimos enumerar os seus elementos, uma vez que temos um número ilimitado de indivíduos.&lt;/p&gt;
&lt;h2 id=&#34;exemplos&#34;&gt;Exemplos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Alunos matriculados na UFLA no 1º sem/2022 (POPULAÇÃO FINITA)&lt;/li&gt;
&lt;li&gt;Peças produzidas por lote (POPULAÇÃO FINITA)&lt;/li&gt;
&lt;li&gt;Plantas de uma espécie de Pinus (POPULAÇÃO INFINITA)&lt;/li&gt;
&lt;li&gt;Clientes potenciais de uma empresa (POPULAÇÃO INFINITA)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Em complemento, quando coletamos informações de todos os elementos de uma
população finita, dizemos que foi realizado um censo. Adotaremos, na disciplina, a notação N para representar a quantidade de
elementos em uma população finita.&lt;/p&gt;
&lt;h3 id=&#34;amostra&#34;&gt;Amostra&lt;/h3&gt;
&lt;p&gt;Uma amostra corresponde a um subconjunto ou uma parte da população. A
notação que representa o número de elementos de uma amostra é n. Na verdade, a grande maioria dos trabalhos de pesquisa é realizado através de amostras. Alguns dos motivos que levam os pesquisadores a trabalharem com amostras são&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uma população infinita só pode ser estudada através de amostras&lt;/li&gt;
&lt;li&gt;as populações finitas muito grandes também devem ser estudadas por meio de
amostras&lt;/li&gt;
&lt;li&gt;redução de tempo e custo da pesquisa&lt;/li&gt;
&lt;li&gt;o estudo cuidadoso de uma amostra tem mais valor científico do que o estudo
sumário de toda a população.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;variáveis&#34;&gt;Variáveis&lt;/h3&gt;
&lt;p&gt;Quando realizamos um levantamento de dados, temos o interesse em conhecer
ou avaliar uma determinada característica da população, como por exemplo, o peso, o diâmetro, o número de defeitos por peça, a produtividade de madeira de uma espécie de Pinus, a escolaridade dos indivíduos de uma comunidade, dentre outras. Essas características são chamadas de variáveis e visam descrever a população sob estudo. As variáveis podem ser classificadas em&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Qualitativas: Correspondem a atributos ou categorias. Elas são subdivididas em nominais quando suas categorias não são passíveis de ordenação, e ordinais, no caso de existir uma ordenação natural para seus atributos. Para as variáveis qualitativas nominais usaremos VQN e para as ordinais, usaremos VQO.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sexo (Masculino, Feminino) – VQN&lt;/li&gt;
&lt;li&gt;Substâncias Químicas (Ácidos, Bases, Hidrocarbonetos, etc) - VQN&lt;/li&gt;
&lt;li&gt;Tipos de Linguagem de programação (Java, PHP, R, Delphi, MATLAB
dentre outros) – VQN&lt;/li&gt;
&lt;li&gt;Escolaridade (Fundamental, Médio e Superior) – VQO&lt;/li&gt;
&lt;li&gt;Classe Social: (Alta, Média e Baixa) - VQO&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;Quantitativas: Correspondem a números resultantes de contagens ou medidas.
Quando se trata de contagens a variável é dita discreta (sendo representada por números inteiros não-negativos). No caso de medidas, a variável é classificada como contínua (sendo que seus valores podem ser representados por quaisquer números reais). Para as variáveis quantitativas discretas usaremos VQD e para as contínuas, usaremos VQC.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Exemplos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Número de peças com defeito – VQD&lt;/li&gt;
&lt;li&gt;Temperatura – VQC&lt;/li&gt;
&lt;li&gt;Diâmetro de barras de aço – VQC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Esta classificação é extremamente importante na análise de dados, uma vez que,
o tipo de variável a ser trabalhada é um ponto de partida para se determinar os métodos de análise mais apropriados ou mesmo válidos.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Spatio-temporal geostatistical modeling of Gneiting applied to surface albedo (Brazil)</title>
      <link>https://henriqueest.github.io/publication/journal-article-4/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/publication/journal-article-4/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>The COVID-19 pandemic in Brazil: an application of the k-means clustering method</title>
      <link>https://henriqueest.github.io/publication/journal-article-3/</link>
      <pubDate>Fri, 09 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/publication/journal-article-3/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Proposition of new alternative tests adapted to the traditional T2 test</title>
      <link>https://henriqueest.github.io/publication/journal-article/</link>
      <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/publication/journal-article/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>App - shiny - Ocorrências criminais - Sinespe</title>
      <link>https://henriqueest.github.io/post/aplicativo_sinesp/aplicativo/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/aplicativo_sinesp/aplicativo/</guid>
      <description>&lt;!-- &lt;style&gt; --&gt;
&lt;!-- body { --&gt;
&lt;!--   text-align: justify; --&gt;
&lt;!--   font-size: 12pt; --&gt;
&lt;!--   } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;h2 id=&#34;histórico&#34;&gt;Histórico&lt;/h2&gt;
&lt;p&gt;Em antecipação a promulgação da Lei nº 13.675, de 11 de junho de 2018, que institui o Sistema Único de Segurança Pública e o Sistema Nacional de Informações de Segurança Pública, Prisionais, de Rastreabilidade de Armas e Munições, de Material Genético, de Digitais e de Drogas (Sinesp), a Senasp já vinha empregando esforços na coleta de dados e informações de interesse da segurança pública desde o ano de 2001, visando a implementação de ações e políticas públicas mais qualificadas.&lt;/p&gt;
&lt;p&gt;A coleta informatizada de dados teve origem na implantação do Sistema Nacional de Estatística de Segurança Pública e Justiça Criminal - SinespJC, em 2004. A solução reúne dados AGREGADOS oriundos das Unidades da Federação, permitindo a elaboração de relatórios e indicadores estatísticos. Seu conteúdo é gerado a partir dos boletins de ocorrência registrados pelas Polícias Civis dos Estados e Distrito Federal, reunindo assim, informações sobre o número de ocorrências, natureza do fato registrado, perfil da vítima, perfil do autor, meios empregados, dentre outras.&lt;/p&gt;
&lt;p&gt;O primeiro módulo implantado foi o Módulo Polícia Civil, do SinespJC, em plataforma desktop e dados estatísticos dos Boletins de Ocorrência. Em 2010, a plataforma foi reformulada para a versão SinespJC Web. Nesse modelo, os dados são coletados mensalmente através de formulários eletrônicos e disponibilizados após sua consolidação pelos Gestores Estaduais do Sinesp, permitindo a produção de relatórios a partir da unidade de análise “Município”.&lt;/p&gt;
&lt;p&gt;A partir de 2012, com a instituição do Sistema Nacional de Informações de Segurança Pública, Prisionais e sobre Drogas - SINESP, por meio da Lei n º 12.681/12, iniciaram-se os projetos para a coleta automatizada de dados e a integração dos sistemas estaduais de registro de ocorrências policiais. Em dezembro de 2014, após a conclusão da primeira etapa de planejamento e desenvolvimento da plataforma Sinesp, foi implementado o Boletim Nacional de Ocorrências Policiais - Sinesp PPE (Procedimentos Policiais Eletrônicos) no estado de Roraima, dando início à coleta de dados de registros de ocorrência em tempo real. Posteriormente, a solução foi implantada em outras Unidades da Federação.&lt;/p&gt;
&lt;p&gt;Neste cenário, em 2015, foi desenvolvido e disponibilizado às UFs o Sinesp Integração, solução destinada à consolidação de dados e informações de múltiplas fontes em uma única Base Nacional, permitindo, dentre outras atividades, a análise de microdados e a produção de estatísticas e relatórios mais qualificados.&lt;/p&gt;
&lt;h1 id=&#34;fontes-de-dados-e-indicadores&#34;&gt;FONTES DE DADOS E INDICADORES&lt;/h1&gt;
&lt;p&gt;Os dados disponíveis foram extraídos das soluções SinespJC e Sinesp Integração, fontes primárias dos seguintes indicadores: Totais de Ocorrências e Totais de Vítimas de estupro, furto de veículos, homicídio doloso, lesão corporal seguida de morte, roubo à instituição financeira, roubo de carga, roubo de veículos e roubo seguido de morte.&lt;/p&gt;
&lt;h1 id=&#34;nota&#34;&gt;NOTA&lt;/h1&gt;
&lt;p&gt;É importante ressaltar que as informações apresentadas refletem o nível de alimentação e consolidação de cada Unidade da Federação no SinespJC e Sinesp Integração na data de sua extração, podendo ocorrer atualizações posteriores à publicação. Salientamos que se considera como último período os dados consolidados que antecedem os últimos três meses, por exemplo: Em fev/2019, serão publicados os dados de jan/2015 a out/2018; em mar/2019 os dados de jan/2015 a nov/2018; e assim sucessivamente. Isso se faz necessário para que os Gestores Estaduais possam coletar, tratar e validar os dados antes do fornecimento e consolidação via SinespJC, não sendo exigido esse processo aos entes que já utilizam o Sinesp Integração e consideram os dados transmitidos como fonte para a produção das estatísticas oficiais.&lt;/p&gt;
&lt;p&gt;Com o avanço do Sinesp Integração, espera-se que as Unidades da Federação aprimorem seus processos de coleta de dados e substituam a alimentação manual do SinespJC pelo processo automatizado. Com isso, será possível a divulgação de dados detalhados em períodos mais curtos e com mais qualidade.&lt;/p&gt;
&lt;h2 id=&#34;fonte&#34;&gt;Fonte&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://dados.gov.br/dataset/sistema-nacional-de-estatisticas-de-seguranca-publica&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinesp&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;aplicativo&#34;&gt;Aplicativo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://jpahenrique.shinyapps.io/dados_sinesp/?_ga=2.132815818.551386921.1666349234-2114962546.1665406207&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Sinesp - Ocorrências criminais&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Aula 2 - Apresentação de Dados</title>
      <link>https://henriqueest.github.io/post/aula2_ufop/aula2/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/aula2_ufop/aula2/</guid>
      <description>&lt;!-- &lt;style&gt; --&gt;
&lt;!-- body { --&gt;
&lt;!--   text-align: justify; --&gt;
&lt;!--   font-size: 12pt; --&gt;
&lt;!--   } --&gt;
&lt;!-- &lt;/style&gt; --&gt;
&lt;p&gt;Em uma pesquisa, coletamos dados sobre a(s) variável(is) de interesse. Muitas vezes esses dados surgem de forma desordenada através do qual não conseguimos detectar, a primeira vista, um comportamento que mereça uma explicação plausível. Uma das formas de descrever o comportamento dos dados é organizá-los em tabelas ou gráficos.&lt;/p&gt;
&lt;h2 id=&#34;tabelas-de-distribuição-de-frequências-simples&#34;&gt;Tabelas de Distribuição de Frequências Simples&lt;/h2&gt;
&lt;h1 id=&#34;conceitos-básicos&#34;&gt;Conceitos Básicos&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Frequência: Medida que quantifica a ocorrência dos valores de uma variável. Pode ser classificada em: absoluta (fa), relativa(fr) e percentual (fp)&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Frequência Absoluta: para variáveis qualitativas, nada mais é do que o número de observações ocorridas em cada classe da variável sob estudo.&lt;/li&gt;
&lt;li&gt;Frequência Relativa: é obtida pela divisão da frequência absoluta pelo número total de dados ou observações.&lt;/li&gt;
&lt;li&gt;Frequência Percentual: é calculada multiplicando-se o valor da frequência relativa por 100.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;construção-de-tabelas-de-distribuição-de-frequências&#34;&gt;Construção de Tabelas de Distribuição de Frequências&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Variáveis Qualitativas&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Exemplo: Em 2006 a Associação Nacional de Comerciantes de Material de Construção (ANAMACO) solicitou uma pesquisa para determinar o perfil de produtos do setor da construção civil com maior saída nas lojas. Foram visitadas 30 lojas e os produtos mais vendidos em cada uma estão no quadro abaixo.&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Tubos&lt;/td&gt;
&lt;td&gt;Cerâmica&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Argamassa&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Tubos&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Tubos&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Cerâmicas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tubos&lt;/td&gt;
&lt;td&gt;Cerâmca&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Cimneto&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Cerâmica&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Tubos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Argamassa&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Tintas&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;td&gt;Cimento&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Obter:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;as frequências absolutas;&lt;/li&gt;
&lt;li&gt;as frequências relativas;&lt;/li&gt;
&lt;li&gt;as frequências percentuais;&lt;/li&gt;
&lt;li&gt;montar a tabela de distribuição de frequências.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;solução&#34;&gt;Solução&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;frequências absolutas ($ f_a $):
cimento = 12, tintas = 7, tubos = 5, cerâmica = 4, argamassa = 2.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Tabela 1: Distribuição de frequências referente aos principais produtos comercializados em 30 lojas do setor de materiais de construção &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Produtos&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ f_a $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ f_r= \frac{f_a}{30} $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ f_p= f_r \times 100 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Cimento&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 12 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ \frac{12}{30}=0,40 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 0,40 \times 100 = 40 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Tintas&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 7 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ \frac{7}{30}=0,23 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 0,23 \times 100 = 23 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Tubos&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 5 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ \frac{5}{30}=0,17 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 0,17 \times 100 = 17 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Cerâmica&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 4 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ \frac{4}{30}=0,13 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 0,13 \times 100 = 13 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Argamassa&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 2 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ \frac{2}{30}=0,07 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 0,07 \times 100 = 7 $&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Total&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 30 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 1,00 $&lt;/td&gt;
&lt;td style=&#34;text-align:right&#34;&gt;$ 100 $&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Modelos não lineares</title>
      <link>https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/</guid>
      <description>&lt;h2 id=&#34;modelos-não-lineares&#34;&gt;Modelos não lineares&lt;/h2&gt;
&lt;p&gt;Modelos não lineares (NLM) geralmente são voltados a obter algumas informações sobre a relação entre as variáveis Y e X. Tais informações estão vinculadas a diferentes graus de conhecimento como&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;uma análise de um gráfico de dispersão de Y vs. X&lt;/li&gt;
&lt;li&gt;restrições de forma da função (monótona, sigmóide)&lt;/li&gt;
&lt;li&gt;a solução de uma equação diferencial suportada por algum
princípio ou teoria&lt;/li&gt;
&lt;li&gt;a interpretação dos seus parâmetros.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qualquer que seja o grau de conhecimento, a escolha de um modelo não linear raramente é empírica.&lt;/p&gt;
&lt;p&gt;Um número crescente de pesquisadores compartilha a sensação de que as relações entre variáveis biológicas são melhor descritas por funções não lineares. Processos como crescimento, decadência, nascimento, mortalidade, competição e produção raramente são relacionados linearmente a variáveis explicativas.&lt;/p&gt;
&lt;p&gt;Nesse sentido, pode-se dizer que o NLM descrevem melhor processos mecanicistas e são úteis para acomodar restrições relativas a tais processos. Em resumo, os NLM&amp;rsquo;Ls têm as seguintes vantagens sobre modelos lineares (ML)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;sua escolha é apoiada por princípios teóricos ou mecanicistas (físicos, químicos ou biológicos) ou qualquer outra informação prévia&lt;/li&gt;
&lt;li&gt;certos parâmetros são de interesse para o pesquisador desde que com interpretação&lt;/li&gt;
&lt;li&gt;as previsões podem ser feitas fora do domínio observado de x&lt;/li&gt;
&lt;li&gt;são parcimoniosos, pois normalmente têm menos parâmetros.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por outro lado, as desvantagens são:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;exigir procedimentos de estimativa iterativa com base no fornecimento de valores iniciais para os parâmetros&lt;/li&gt;
&lt;li&gt;Os métodos de inferência são aproximados&lt;/li&gt;
&lt;li&gt;Exigir conhecimento do pesquisador sobre o fenômeno alvo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;interpretação-de-parâmetros&#34;&gt;Interpretação de parâmetros&lt;/h3&gt;
&lt;p&gt;Ao assumir o NLM para descrever um processo, é essencial conhecer o significado de seus parâmetros. Além da dimensionalidade, o estudo do espaço paramétrico é igualmente importante, pois permite reconhecer os valores que um parâmetro assume. Muitos processos envolvem variáveis positivas, como tempo, dose, produção, velocidade e variáveis limitadas, normalmente representadas em porcentagem, como conteúdo (%), concentração (%) e rendimento (%).&lt;/p&gt;
&lt;p&gt;Propriedades relevantes de uma função são consideradas, como ter pontos característicos (crítico, inflexão), seu comportamento (concavidade, monoticidade) ou padrões específicos (sigmóide, parabólico).&lt;/p&gt;
&lt;p&gt;Algumas dessas propriedades, começando pelos pontos característicos relacionados ao eixo coordenado (Y), são conhecidas como&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ASS&lt;/strong&gt;: assíntota superior&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ASI&lt;/strong&gt;: assíntota inferior&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PO&lt;/strong&gt;: ponto de origem ou interceptação.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Entre os pontos característicos no eixo das abcissas (X) estão:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;PC&lt;/strong&gt;: ponto crítico&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PI&lt;/strong&gt;: ponto de inflexão&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PS&lt;/strong&gt;: ponto de simetria&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;O símbolo para cada um desses parâmetros dependerá do modelo considerado. Às vezes é mais fácil reconhecer as propriedades de uma função por sua aparência com algum padrão específico. Entre os mais comuns está&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SIG&lt;/strong&gt;: sigmóide, sendo monótono crescente (MC) ou decrescente (MD). A curva tem uma forma de S ou S invertido. Cada sigmóide tem &lt;strong&gt;PI&lt;/strong&gt;, &lt;strong&gt;ASS&lt;/strong&gt; e &lt;strong&gt;ASI&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;paper-referência&#34;&gt;Paper referência&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Esse paper trata de ajustes de modelos não lineares em dados de COVID-19&lt;/li&gt;
&lt;li&gt;Países com 20 maiores Produto Interno Bruto (PIB)&lt;/li&gt;
&lt;li&gt;Modelagem logística na primeira onda&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://periodicos.unichristus.edu.br/jhbs/article/view/4226/1551&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Paper&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;código-r&#34;&gt;Código R&lt;/h2&gt;
&lt;p&gt;Para carregar os pacotes necessários nas IDE&amp;rsquo;s R ou rstudio, basta executar as seguintes linhas de comando.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(covid19br)
library(tidyverse)
library(dplyr)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- downloadCovid19(&amp;quot;world&amp;quot;) %&amp;gt;%
  filter(country == &amp;quot;Italy&amp;quot;)%&amp;gt;%
  select(date, country, accumCases, accumDeaths)
glimpse(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 799
## Columns: 4
## $ date        &amp;lt;date&amp;gt; 2020-01-22, 2020-01-23, 2020-01-24, 2020-01-25, 2020-01-2~
## $ country     &amp;lt;chr&amp;gt; &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Ita~
## $ accumCases  &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3~
## $ accumDeaths &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0~
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;comportamento-das-mortes-acumuladas-itália&#34;&gt;Comportamento das mortes acumuladas (Itália)&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data)+
  geom_point(aes(x = as.Date(date), y = accumDeaths), colour = &amp;quot;steelblue&amp;quot;)+
  labs(x = &amp;quot;Date (day)&amp;quot;, y = &amp;quot;Accumulated deaths&amp;quot;)+
  theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/index_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;
&lt;p&gt;Sugere modelo duplo sigmóide&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data)+
  geom_point(aes(x = as.Date(date), y = accumDeaths), colour = &amp;quot;steelblue&amp;quot;)+
  geom_vline(aes(x = as.Date(date), y = accumDeaths, xintercept = as.Date(&amp;quot;2020-10-20&amp;quot;)),
             colour=&amp;quot;brown&amp;quot;, linetype = &amp;quot;longdash&amp;quot;)+
  geom_vline(aes(x = as.Date(date), y = accumDeaths, xintercept = as.Date(&amp;quot;2021-12-15&amp;quot;)),
             colour=&amp;quot;brown&amp;quot;, linetype = &amp;quot;longdash&amp;quot;)+
 annotate(&amp;quot;text&amp;quot;, label = &amp;quot;sigmoid behavior&amp;quot;, x = as.Date(&amp;quot;2020-05-1&amp;quot;), y = 100000, size = 5,
          colour = &amp;quot;gray&amp;quot;)+
 annotate(&amp;quot;text&amp;quot;, label = &amp;quot;sigmoid behavior&amp;quot;, x = as.Date(&amp;quot;2021-08-1&amp;quot;), y = 100000, size = 5, 
          colour = &amp;quot;gray&amp;quot;)+
  labs(x = &amp;quot;Date (day)&amp;quot;, y = &amp;quot;Accumulated deaths&amp;quot;)+
  theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/index_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h3 id=&#34;ajuste-do-modelo-duplo-sigmóide&#34;&gt;Ajuste do modelo duplo sigmóide&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Criando uma variável numérica para contar o tempo&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;n &amp;lt;- nrow(data)
data &amp;lt;- data %&amp;gt;%
  mutate(data = c(seq(1,n,1)))
glimpse(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 799
## Columns: 5
## $ date        &amp;lt;date&amp;gt; 2020-01-22, 2020-01-23, 2020-01-24, 2020-01-25, 2020-01-2~
## $ country     &amp;lt;chr&amp;gt; &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Italy&amp;quot;, &amp;quot;Ita~
## $ accumCases  &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3~
## $ accumDeaths &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0~
## $ data        &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,~
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Alterando a escala de dados para evitar problemas de over/under-flow.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_mod &amp;lt;- data %&amp;gt;%
  select(accumDeaths, data) %&amp;gt;%
  mutate(accumDeathscorr = accumDeaths/10000,
         data = data/100)
glimpse(data_mod)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 799
## Columns: 3
## $ accumDeaths     &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ data            &amp;lt;dbl&amp;gt; 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, ~
## $ accumDeathscorr &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Comportamento dos dados transformados&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(data_mod)+
  geom_point(aes(x = data, y = accumDeathscorr), colour = &amp;quot;steelblue&amp;quot;)+
  geom_vline(aes(x = data, y = accumDeathscorr, xintercept = 3),
             colour=&amp;quot;brown&amp;quot;, linetype = &amp;quot;longdash&amp;quot;)+
  geom_vline(aes(x = data, y = accumDeathscorr, xintercept = 7),
             colour=&amp;quot;brown&amp;quot;, linetype = &amp;quot;longdash&amp;quot;)+
 annotate(&amp;quot;text&amp;quot;, label = &amp;quot;sigmoid behavior&amp;quot;, x = 1.5, y = 10, size = 5,
          colour = &amp;quot;gray&amp;quot;)+
 annotate(&amp;quot;text&amp;quot;, label = &amp;quot;sigmoid behavior&amp;quot;, x = 5.5, y = 10, size = 5, 
          colour = &amp;quot;gray&amp;quot;)+
  labs(x = &amp;quot;Day&amp;quot;, y = &amp;quot;Accumulated deaths corrected&amp;quot;)+
  theme_classic()
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/index_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h2 id=&#34;chutes-iniciais-para-cada-sigmóide&#34;&gt;Chutes iniciais para cada sigmóide&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;modelo um: modelo logístico&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;apropos(&amp;quot;^SS&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;SSasymp&amp;quot;     &amp;quot;SSasympOff&amp;quot;  &amp;quot;SSasympOrig&amp;quot; &amp;quot;SSbiexp&amp;quot;     &amp;quot;SSD&amp;quot;        
##  [6] &amp;quot;SSfol&amp;quot;       &amp;quot;SSfpl&amp;quot;       &amp;quot;SSgompertz&amp;quot;  &amp;quot;SSlogis&amp;quot;     &amp;quot;SSmicmen&amp;quot;   
## [11] &amp;quot;SSweibull&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;n0 &amp;lt;- nls(accumDeathscorr ~ SSlogis(data, A, M, S), data = data_mod, 
          subset = data &amp;lt; 3)
coef(n0)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         A         M         S 
## 3.5857409 0.8126909 0.1364505
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_modn0 &amp;lt;- data_mod %&amp;gt;%
  filter(data &amp;lt; 3) %&amp;gt;%
  mutate(predict = predict(n0))
ggplot(data_modn0)+
geom_point(aes(x = data, y = accumDeathscorr, color = &amp;quot;blue&amp;quot;))+
  geom_line(aes(x = data, y = predict, color = &amp;quot;red&amp;quot;))+
  labs(x = &amp;quot;data&amp;quot;, y = &amp;quot;Accumulated deaths&amp;quot;)+
  theme_bw()+
  theme(legend.position=&amp;quot;right&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) +
  scale_color_manual(values=c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;), 
                       name=&amp;quot;Accumulated deaths&amp;quot;,
                     breaks = c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;),
                       labels=c(&amp;quot;Observed&amp;quot;, &amp;quot;Predict&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/index_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; /&gt;
&lt;ul&gt;
&lt;li&gt;modelo dois: modelo logístico&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;apropos(&amp;quot;^SS&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;SSasymp&amp;quot;     &amp;quot;SSasympOff&amp;quot;  &amp;quot;SSasympOrig&amp;quot; &amp;quot;SSbiexp&amp;quot;     &amp;quot;SSD&amp;quot;        
##  [6] &amp;quot;SSfol&amp;quot;       &amp;quot;SSfpl&amp;quot;       &amp;quot;SSgompertz&amp;quot;  &amp;quot;SSlogis&amp;quot;     &amp;quot;SSmicmen&amp;quot;   
## [11] &amp;quot;SSweibull&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;n1 &amp;lt;- nls(accumDeathscorr ~ SSlogis(data, A, M, S), data = data_mod, 
          subset = data &amp;gt; 3 &amp;amp; data &amp;lt; 7)
coef(n1)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          A          M          S 
## 13.3237430  3.3364864  0.6323343
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data_modn1 &amp;lt;- data_mod %&amp;gt;%
  filter(data &amp;gt; 3 &amp;amp; data &amp;lt; 7) %&amp;gt;%
  mutate(predict = predict(n1))
ggplot(data_modn1)+
geom_point(aes(x = data, y = accumDeathscorr, color = &amp;quot;blue&amp;quot;))+
  geom_line(aes(x = data, y = predict, color = &amp;quot;red&amp;quot;))+
  labs(x = &amp;quot;data&amp;quot;, y = &amp;quot;Accumulated deaths&amp;quot;)+
  theme_bw()+
  theme(legend.position=&amp;quot;right&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) +
  scale_color_manual(values=c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;), 
                       name=&amp;quot;Accumulated deaths&amp;quot;,
                     breaks = c(&amp;quot;blue&amp;quot;, &amp;quot;red&amp;quot;),
                       labels=c(&amp;quot;Observed&amp;quot;, &amp;quot;Predict&amp;quot;))
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/post/2020-12-01-r-rmarkdown/index_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; /&gt;
&lt;h2 id=&#34;objetivos&#34;&gt;Objetivos&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;encontre modelos que possam se ajustar a esses dados&lt;/li&gt;
&lt;li&gt;buscar parcerias&lt;/li&gt;
&lt;li&gt;Publicação&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://henriqueest.github.io/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-wowchemy&#34;&gt;Create slides in Markdown with Wowchemy&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wowchemy&lt;/a&gt; | &lt;a href=&#34;https://owchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;span class=&#34;fragment &#34; &gt;
   One 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   **Two** 
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
   Three 
&lt;/span&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;

&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/media/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/media/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/wowchemy/wowchemy-hugo-modules/discussions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wowchemy.com/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Heart Rate Variability in Shift Workers: Responses to Orthostatism and Relationships with Anthropometry, Body Composition, and Blood Pressure</title>
      <link>https://henriqueest.github.io/publication/journal-article-2/</link>
      <pubDate>Thu, 01 Oct 2015 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/publication/journal-article-2/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click the &lt;em&gt;Cite&lt;/em&gt; button above to demo the feature to enable visitors to import publication metadata into their reference management software.
  &lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://henriqueest.github.io/admin/config.yml</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/admin/config.yml</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
