<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>üìä Sa√≠das gr√°ficas no R: introdu√ß√£o ao pacote ggplot2 | Henrique JP Alves</title>
    <link>https://henriqueest.github.io/courses/example/</link>
      <atom:link href="https://henriqueest.github.io/courses/example/index.xml" rel="self" type="application/rss+xml" />
    <description>üìä Sa√≠das gr√°ficas no R: introdu√ß√£o ao pacote ggplot2</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 21 Mar 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://henriqueest.github.io/courses/example/featured%20%282%29.jpg</url>
      <title>üìä Sa√≠das gr√°ficas no R: introdu√ß√£o ao pacote ggplot2</title>
      <link>https://henriqueest.github.io/courses/example/</link>
    </image>
    
    <item>
      <title>Pacote ggplot2: um curso introdut√≥rio</title>
      <link>https://henriqueest.github.io/courses/example/python/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://henriqueest.github.io/courses/example/python/</guid>
      <description>&lt;p&gt;Constru√≠do baseado nos pacotes tidyverse e ggplot2 do R.&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-clock  pr-1 fa-fw&#34;&gt;&lt;/i&gt; 2 horas por dia, por 2 dias&lt;/p&gt;
&lt;style&gt;
body {
  text-align: justify;
  font-size: 12pt;
  }
code.r{
  font-size: 10px;
}
pre {
  font-size: 12px
}
&lt;/style&gt;
&lt;h2 id=&#34;primeira-parte&#34;&gt;&lt;strong&gt;PRIMEIRA PARTE&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Primeiramente, todo e qualquer resultado estat√≠stico obtido em qualquer software estat√≠stico deve ser bem compreendido antes de sua apresenta√ß√£o. As sa√≠das gr√°ficas desses resultados compreendem uma importante ferramenta resumidora do comportamento dos dados amostrais observados e at√© mesmo de poula√ß√µes inteiras, envolvendo diversos fen√¥menos que podem ser compreendidos usando essas ferramentas estat√≠sticas. As sa√≠das gr√°ficas do &lt;strong&gt;R&lt;/strong&gt; e do &lt;strong&gt;rstudio&lt;/strong&gt; n√£o s√£o diferentes.&lt;/p&gt;
&lt;p&gt;Aqui nessas notas n√≥s poder√≠amos simplesmente selecionar alguns pacotes dispon√≠veis no &lt;strong&gt;rstudio&lt;/strong&gt; que fornecem uma guia interativa para a produ√ß√£o de gr√°ficos no pacote &lt;strong&gt;ggplot2&lt;/strong&gt; e apresent√°-los, tais como os pacotes &lt;strong&gt;esquisse&lt;/strong&gt; e &lt;strong&gt;ggplotgui&lt;/strong&gt;. Mas esse n√£o √© o nosso objetivo.&lt;/p&gt;
&lt;p&gt;Portanto, n√≥s iremos apresentar o pacote &lt;strong&gt;ggplot2&lt;/strong&gt; de forma lenta e gradativa, apresentando o seu diferencial com rela√ß√£o a outros pacotes e tamb√©m outras fun√ß√µes de sa√≠das gr√°ficas do &lt;strong&gt;R&lt;/strong&gt; e do &lt;strong&gt;rstudio&lt;/strong&gt;, al√©m de mostrar o passo a passo de como se d√° a constru√ß√£o de sa√≠das gr√°ficas desse pacote no &lt;strong&gt;rstudio&lt;/strong&gt;, entendo suas fun√ß√µes internas e seus argumentos.&lt;/p&gt;
&lt;p&gt;Antes de iniciarmos a apresenta√ß√£o desse pacote, apresentamos um conjunto de fun√ß√µes que verificr√° se os pacotes aqui necess√°rios est√£o instalados no &lt;strong&gt;rstudio&lt;/strong&gt; e, em seguida, far√° o carregamento desses pacotes no mesmo.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;packages &amp;lt;- c(&amp;quot;dplyr&amp;quot;,&amp;quot;tidyverse&amp;quot;,&amp;quot;lattice&amp;quot;,  &amp;quot;rgdal&amp;quot;, &amp;quot;rgeos&amp;quot;, &amp;quot;maptools&amp;quot;, &amp;quot;plyr&amp;quot;, &amp;quot;sf&amp;quot;, &amp;quot;covid19br&amp;quot;, &amp;quot;RColorBrewer&amp;quot;)

# instala os pacotes que n√£o est√£o instalados
installed_packages &amp;lt;- packages %in% rownames(installed.packages())
if (any(installed_packages == FALSE)) {
  install.packages(packages[!installed_packages])
}

# carrega os pacotes
invisible(lapply(packages, library, character.only = TRUE))
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;introdu√ß√£o&#34;&gt;Introdu√ß√£o&lt;/h2&gt;
&lt;p&gt;N√£o √© incomum em qualquer an√°lise estat√≠tica de um conjunto de dados, nos depararmos com a necessidade da utiliza√ß√£o de recursos gr√°ficos para representar e conhecer, de forma resumida, o comportamento das vari√°veis de interesse do mesmo. O &lt;strong&gt;R&lt;/strong&gt; possui algumas fun√ß√µes implementadas em sua base (n√£o √© necess√°rio a instala√ß√£o de pacotes), tais como as fun√ß√µes &lt;em&gt;plot&lt;/em&gt;, &lt;em&gt;hist&lt;/em&gt;, &lt;em&gt;barplot&lt;/em&gt;, &lt;em&gt;boxplot&lt;/em&gt;, &lt;em&gt;pie&lt;/em&gt;, entre outras e tamb√©m, alguns pacotes de recursos gr√°ficos, como o &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Vamos agora exemplificar como construir um histograma e um gr√°fico de barras utilizando as respectivas fun√ß√µes dispon√≠veis na base do &lt;strong&gt;R&lt;/strong&gt; e tamb√©m o pacote mencionado utilizando o conjunto de dados &lt;a href=&#34;https://gist.github.com/seankross/a412dfbd88b3db70b74b&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mtcars&lt;/a&gt; dispon√≠vel no &lt;strong&gt;R&lt;/strong&gt;. Os dados foram coletados da revista &amp;ldquo;Motor Trend US (1974)&amp;rdquo; e diz respeito ao consumo de combust√≠vel e tamb√©m outros 10 aspectos de design e desempenho de 32 modelos de autom√≥veis compreendidos entre os anos de 1973 e 1974.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mtcars &amp;lt;- within(mtcars, {
   vs &amp;lt;- factor(vs, labels = c(&amp;quot;V&amp;quot;, &amp;quot;S&amp;quot;))
   am &amp;lt;- factor(am, labels = c(&amp;quot;automatica&amp;quot;, &amp;quot;manual&amp;quot;))
   cyl  &amp;lt;- ordered(cyl)
   gear &amp;lt;- ordered(gear)
   carb &amp;lt;- ordered(carb)
})
summary(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       mpg        cyl         disp             hp             drat      
##  Min.   :10.40   4:11   Min.   : 71.1   Min.   : 52.0   Min.   :2.760  
##  1st Qu.:15.43   6: 7   1st Qu.:120.8   1st Qu.: 96.5   1st Qu.:3.080  
##  Median :19.20   8:14   Median :196.3   Median :123.0   Median :3.695  
##  Mean   :20.09          Mean   :230.7   Mean   :146.7   Mean   :3.597  
##  3rd Qu.:22.80          3rd Qu.:326.0   3rd Qu.:180.0   3rd Qu.:3.920  
##  Max.   :33.90          Max.   :472.0   Max.   :335.0   Max.   :4.930  
##        wt             qsec       vs              am     gear   carb  
##  Min.   :1.513   Min.   :14.50   V:18   automatica:19   3:15   1: 7  
##  1st Qu.:2.581   1st Qu.:16.89   S:14   manual    :13   4:12   2:10  
##  Median :3.325   Median :17.71                          5: 5   3: 3  
##  Mean   :3.217   Mean   :17.85                                 4:10  
##  3rd Qu.:3.610   3rd Qu.:18.90                                 6: 1  
##  Max.   :5.424   Max.   :22.90                                 8: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Vamos escolher a vari√°vel mpg (milhas percorrida por gal√£o de combust√≠vel), que √© de natureza num√©rica e cont√≠nua para gerarmos um histograma (frequ√™ncia absoluta) utilizando a  fun√ß√£o &lt;em&gt;hist&lt;/em&gt; da base do &lt;strong&gt;R&lt;/strong&gt; e tamb√©m utilizando o pacote &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;hist(mtcars$mpg, col = &amp;quot;lightblue&amp;quot;, main = &amp;quot;Fun√ß√£o hist (base)&amp;quot;, 
     xlab = &amp;quot;Milhas por gal√£o (mpg)&amp;quot;, ylab = &amp;quot;Frequ√™ncia absoluta&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lattice)
histogram(~mpg,data=mtcars,
       type =&amp;quot;count&amp;quot;,
       xlab =&amp;quot;Milhas por gal√£o (mpg)&amp;quot;,
       ylab = &amp;quot;Frequ√™ncia absoluta&amp;quot;,
       main =&amp;quot;Fun√ß√£o histogram (lattice)&amp;quot;,
       col = &amp;quot;lightblue&amp;quot;,
       breaks = 5)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora utilizar a vari√°vel cyl (n√∫mero de cilindros) para constru√≠rmos um gr√°fico de barras (frequ√™ncia absoluta) utilizando a fun√ß√£o &lt;em&gt;barplot&lt;/em&gt; da base do &lt;strong&gt;R&lt;/strong&gt; e tamb√©m o pacote &lt;strong&gt;lattice&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;tab &amp;lt;- table(mtcars$cyl)
tab
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
##  4  6  8 
## 11  7 14
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;barplot(tab, col = &amp;quot;lightblue&amp;quot;, main = &amp;quot;Fun√ß√£o barplot (base)&amp;quot;, xlab = &amp;quot;N√∫mero de cilindros por motor (cyl)&amp;quot;, ylab = &amp;quot;Frequ√™ncia absoluta&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;library(lattice)
tabela &amp;lt;- xtabs(~cyl, data = mtcars)
tabela
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## cyl
##  4  6  8 
## 11  7 14
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;barchart(tabela,
         horizontal = FALSE,
         main = &amp;quot;Fun√ß√£o barchart (lattice)&amp;quot;,
         xlab = &amp;quot;N√∫mero de cilindros por motor (cyl)&amp;quot;,
         ylab = &amp;quot;Frequ√™ncia absoluta&amp;quot;,
         col = &amp;quot;lightblue&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Bastam esses dois exemplos para percebermos algumas situa√ß√µes: para cada tipo de gr√°fico escolhido de acordo com a natureza da vari√°vel, o conjunto de linhas de comandos necess√°rios para ger√°-los no &lt;strong&gt;R&lt;/strong&gt; √© √∫nico e particular; √© necess√°rio tamb√©m a utiliza√ß√£o de fun√ß√µes adicionais (table) e fun√ß√µes espec√≠ficas do pacote &lt;strong&gt;lattice&lt;/strong&gt; (xtabs) para a constru√ß√£o dos gr√°ficos de barras. Essas situa√ß√µes for√ßam o usu√°rio a ter conhecimento de cada uma dessas fun√ß√µes particulares e tamb√©m seus argumentos.&lt;/p&gt;
&lt;p&gt;Essas justificativas s√£o suficientes para pensarmos em algum pacote que torne mais f√°cil ao usu√°rio a constru√ß√£o de gr√°ficos no &lt;strong&gt;R&lt;/strong&gt;. Esse pacote existe e √© o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;, que √© o objetivo desse curso. Vamos conhecer um pouco mais desse pacote e observar suas vantagens.&lt;/p&gt;
&lt;h2 id=&#34;o-pacote-ggplot2&#34;&gt;&lt;em&gt;O pacote ggplot2&lt;/em&gt;&lt;/h2&gt;
&lt;p&gt;No ano de 2005, o estat√≠stico, cientista computacional e professor adjunto norte-americano Leland Wilkinson, da University of Illinois (Chicago), publicou o livro &amp;ldquo;The grammar of Graphics&amp;rdquo;, que trata de uma fonte de princ√≠pios fundamentais para a constru√ß√£o de gr√°ficos estat√≠sticos. O autor defende a ideia que um gr√°fico √© uma mapeamento dos dados em atributos est√©ticos (posi√ß√£o, cor, forma, tamanho, etc) de formas geom√©tricas (pontos, linhas, barras, caixas, etc).&lt;/p&gt;
&lt;p&gt;Em sua tese de doutorado (2008), Hadley Wickham adotou a filosofia defendida por Leland para responder a pergunta &amp;ldquo;O que √© um gr√°fico estat√≠stico?&amp;rdquo;, criando, ent√£o, o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Hadley ent√£o, escreveu o livro &amp;ldquo;A Layered Grammar of Graphics&amp;rdquo;, onde incrementou √†s ideias de Leland a vis√£o de que os elementos de um gr√°fico (dados, sistema de coordenadas, r√≥tulos, anota√ß√µes, entre outros) s√£o as suas camadas e que a constru√ß√£o de um gr√°fico se d√° pela sobreposi√ß√£o dessas camadas. Essa √© a ess√™ncia do pacote &lt;strong&gt;ggplot2&lt;/strong&gt;: construir um gr√°fico camada por camada.&lt;/p&gt;
&lt;p&gt;Aliado a essa filosofia bem fundamentada, esse pacote ainda traz algumas vantagens: geralmente os gr√°ficos constru√≠dos s√£o mais bonitos e apresent√°veis, s√£o de f√°cil personaliza√ß√£o e apresentam uma estrutura (sintaxe) padronizada.&lt;/p&gt;
&lt;h2 id=&#34;a-gram√°tica-em-camadas-de-gr√°ficos&#34;&gt;A gram√°tica em camadas de gr√°ficos&lt;/h2&gt;
&lt;p&gt;Basicamente podemos descrever individualmente qualquer gr√°fico estat√≠stico como uma combina√ß√£o de um conjunto de dados, um geom, um conjunto de mapeamentos, um stat, um ajuste de posi√ß√£o, um sistema de coordenadas e um esquema de facetas.&lt;/p&gt;
&lt;p&gt;Abaixo apresentamos os seis elementos que envolvem a constru√ß√£o de gr√°ficos estat√≠sticos no ggplot2. Os elementos marcados com * s√£o essenciais e obrigat√≥rios. Os termos em negrito, como em &lt;strong&gt;aes&lt;/strong&gt;, representam as fun√ß√µes a serem utilizadas no ggplot2 para a constru√ß√£o dos gr√°ficos estat√≠sticos.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Elementos&lt;/th&gt;
&lt;th&gt;Exemplos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;aes&lt;/strong&gt;t√©tica$^*$&lt;/td&gt;
&lt;td&gt;cor, formato&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;geom&lt;/strong&gt;etrias$^*$&lt;/td&gt;
&lt;td&gt;barra, ponto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;e&lt;strong&gt;stat&lt;/strong&gt;√≠sticas (modelos)&lt;/td&gt;
&lt;td&gt;mediana, m√°ximo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;facet&lt;/strong&gt;as&lt;/td&gt;
&lt;td&gt;facetas&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;coord&lt;/strong&gt;enadas&lt;/td&gt;
&lt;td&gt;polar, cartesiana&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;them&lt;/strong&gt;as&lt;/td&gt;
&lt;td&gt;eixos, t√≠tulos&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Vamos agora realizar essa constru√ß√£o passo a passo no &lt;strong&gt;R&lt;/strong&gt;. Os dados devem ser um data.frame. Essa condi√ß√£o √© obrigat√≥ria para o uso do ggplot2. Primeiramente vamos instalar e carregar o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;. Depois, vamos colocar o conjunto de dados &lt;em&gt;mtcars&lt;/em&gt;, dispon√≠vel no &lt;strong&gt;R&lt;/strong&gt;, em data.frame. Feito isso, n√≥s estamos em condi√ß√µes de iniciar a constru√ß√£o de gr√°ficos no &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A primeira camada (layer) necess√°ria para a cria√ß√£o de gr√°ficos no &lt;strong&gt;ggplot2&lt;/strong&gt; √© dada pelo comando ggplot(dados). Neste comando, estamos criando a √°rea onde o gr√°fico ser√° constru√≠do e, ainda, informando ao &lt;strong&gt;ggplot2&lt;/strong&gt; qual o conjunto de dados que cont√©m as vari√°veis de interesse.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;N√≥s notamos que √© criado uma √°rea (em cinza) onde ser√° constru√≠do o gr√°fico. Essa √°rea ainda n√£o cont√©m nenhum formato geom√©trico (geom_tipo) como, por exemplo, pontos, barras, caixas, etc. Falta tamb√©m a informa√ß√£o da est√©tica do gr√°fico desejado juntamente com as vari√°veis de interesse aes(x,y,cores). Esse √© o pr√≥ximo passo. Note tamb√©m que a cada acr√©scimo de camada utilzamos o sinal &lt;code&gt;+&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A vari√°vel mpg j√° foi apresentada e utilizada nos gr√°ficos anteriores. A vari√°vel disp significa quantas cilindradas o motor do ve√≠culo possui. Note que ainda n√£o escolhemos a cor dos pontos do gr√°fico nem rotulamos seus eixos. Nosso gr√°fico ainda est√° incompleto.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg))
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;No pacote &lt;strong&gt;gplot2&lt;/strong&gt; n√≥s tamb√©m temos a liberdade de escolher a escala de cores que iram compor o nosso gr√°fico. Para isso temos tr√™s argumentos: color e colour, que se diferem devido a lingua ingleza e fill. Os dois primeiros s√£o utilizados em entes geom√©tricos que n√£o possuem √°rea, tais como pontos e linhas, sendo necess√°rio utilizar apenas um deles e a escolha fica a crit√©rio do usu√°rio. J√° o comando fill √© utilizado naquele ente geom√©trico que possui √°rea, sendo respons√°vel pelo preenchimento dessa √°rea com a cor desejada. Ambos devem ser utilizados junto ao comando geom_tipo.&lt;/p&gt;
&lt;p&gt;Vamos agora ver dois exemplos de utiliza√ß√£o desses argumentos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg, color=as.factor(am))) +
  labs(x=&amp;quot;Cilindradas&amp;quot;, y=&amp;quot;Milhas/gal√£o&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars) +
  geom_point(mapping = aes(x= disp, y=mpg), color=c(&amp;quot;red&amp;quot;)) +
  labs(x=&amp;quot;Cilindradas&amp;quot;, y=&amp;quot;Milhas/gal√£o&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-8-2.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;N√≥s notamos que se utilizarmos o argumento para a escolha das cores dentro da fun√ß√£o aes, este deve estar relaciondo a alguma vari√°vel espec√≠fica. No nosso exemplo, √© o tipo de transmiss√£o do carro a vari√°vel em quest√£o. Caso esse argumento seja utilizado fora da fun√ß√£o aes, n√≥s temos a liberdade de escolha das cores, pois ela n√£o est√£o relacionadas as vari√°veis em quest√£o.&lt;/p&gt;
&lt;p&gt;Tente utilizar o argumento de cores relacionado a vari√°vies fora da fun√ß√£o aes e ver√° que o &lt;strong&gt;R&lt;/strong&gt; retornar√° uma mensagem de erro, dizendo que n√£o reconhece a vari√°vel.&lt;/p&gt;
&lt;p&gt;Vamos agora apresentar um gr√°fico de barras onde o interesse √© apresentar as frequ√™ncias absolutas, relativas e percentual da quantidade de cilindros que o motor do carro possui (cyl) separados por tipo de transmiss√£o (am) .&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..), fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
    labs(x = &amp;quot;N√∫mero de cilindros por motor&amp;quot;, y = &amp;quot;Frequ√™ncia absoluta&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..)/sum(..count..), fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
  labs(x = &amp;quot;N√∫mero de cilindros por motor&amp;quot;, y = &amp;quot;Frequ√™ncia relativa&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-2.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;ggplot(mtcars, aes(x = as.factor(cyl))) +
  geom_bar(aes(y = (..count..)/sum(..count..)*100, fill=as.factor(am)), 
            position = &amp;quot;dodge&amp;quot;, colour=&amp;quot;black&amp;quot;, alpha=0.45)+
  labs(x = &amp;quot;N√∫mero de cilindros por motor&amp;quot;, y = &amp;quot;Frequ√™ncia percentual&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-9-3.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora construir um gr√°fico do tipo boxplot utilizando o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;N√∫mero de cilindros&amp;quot;, y = &amp;quot;Milhas/gal√£o&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;top&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-10-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;N√∫mero de cilindros&amp;quot;, y = &amp;quot;Milhas/gal√£o&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-11-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, alpha=0.2) +
  labs(x = &amp;quot;N√∫mero de cilindros&amp;quot;, y = &amp;quot;Milhas/gal√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;left&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-12-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; cor &amp;lt;- gray(0:2 / 2)
 ggplot(mtcars) +
  geom_boxplot(aes(x = as.factor(cyl), y = mpg, fill=as.factor(am)), colour=&amp;quot;brown&amp;quot;, 
               alpha=0.2) +
  labs(x = &amp;quot;N√∫mero de cilindros&amp;quot;, y = &amp;quot;Milhas/gal√£o&amp;quot;, fill = &amp;quot;Tipo de transmis√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;right&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) +
  scale_fill_manual(values=cor)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-13-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora construir alguns histogramas com frequ√™ncias absolutas, relativas e percentuais, nessa ordem. Note que o comando &lt;code&gt;bins&lt;/code&gt; define o n√∫mero de classes a ser escolhido. Neste exemplo escolhemos arbitrariamente &lt;code&gt;bins&lt;/code&gt; igual a 5, mas o usu√°rio pode fazer os c√°lculos manualmente e utiliz√°-lo. N√≥s tamb√©m definimos a escala dos eixos &lt;code&gt;x&lt;/code&gt; e &lt;code&gt;y&lt;/code&gt; manualmente, atrav√©s dos comandos &lt;code&gt;scale_x_continuous&lt;/code&gt; e &lt;code&gt;scale_y_continuous&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..)/sum(..count..), fill=as.factor(am)), 
                 bins=5, colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/gal√£o&amp;quot;, y = &amp;quot;Frequ√™ncia relativa&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,1,0.1)))+
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-14-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..), fill=as.factor(am)), bins=5,  
                 colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/gal√£o&amp;quot;, y = &amp;quot;Frequ√™ncia absoluta&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,15,3.5))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-15-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..), fill=as.factor(am)), bins=5,  
                 colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  labs(x = &amp;quot;Milhas/gal√£o&amp;quot;, y = &amp;quot;Frequ√™ncia absoluta&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,15,3.5))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-16-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Antes de constru√≠rmos o pr√≥ximo histograma, precisamos apresentar a fun√ß√£o &lt;code&gt;facet&lt;/code&gt; do ggplot2. Esta fun√ß√£o permite a constru√ß√£o de gr√°ficos em &lt;code&gt;facetas&lt;/code&gt;. O que √© isso? Suponha que estamos interessados em constru√≠rmos um histograma baseado no anteriormente apresentado. Mas o nosso interesse maior √© apresentar um histograma individual para cada tipo de transmiss√£o &lt;code&gt;am&lt;/code&gt; considerando a vari√°vel cont√≠nua &lt;code&gt;mpg&lt;/code&gt;. Abaixo apresentamos a constru√ß√£o deste histograma.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; cor &amp;lt;- gray(0:1 / 2)
 ggplot(mtcars) +
  geom_histogram(aes(x = mpg, y = (..count..)/sum(..count..)*100, fill=as.factor(am)), 
                 bins=5, colour=&amp;quot;brown&amp;quot;, alpha=0.2)+
  facet_wrap(~am)+
  labs(x = &amp;quot;Milhas/gal√£o&amp;quot;, y = &amp;quot;Frequ√™ncia percentual&amp;quot;, fill = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  scale_y_continuous(breaks = c(seq(0,60,10))) +
  scale_x_continuous(breaks = c(seq(8.8,38.3,5.9))) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=20), 
        legend.text=element_text(size=20), axis.text=element_text(size=12),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        strip.text.x = element_text(size=0),
        strip.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-17-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Vamos agora apresentar um exemplo de como construir um gr√°fico de tend√™ncia destacando-se os pontos de dispers√£o dos dados.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt; ggplot(mtcars, aes(x = disp, y = mpg)) +
  geom_point(aes(colour=as.factor(am)), alpha=0.6, size=1.7)+
  geom_line(aes(colour=as.factor(am)), alpha=0.2, size=1.7, linetype=1)+
  labs(x = &amp;quot;Cilindradas&amp;quot;, y = &amp;quot;Milhas/gal√£o&amp;quot;, colour = &amp;quot;Tipo de transmiss√£o&amp;quot;) +
  theme_bw() +
  theme(legend.position=&amp;quot;bottom&amp;quot;, 
        legend.box = &amp;quot;horizontal&amp;quot;,legend.title=element_text(size=15), 
        legend.text=element_text(size=15), axis.text=element_text(size=20),
        axis.title=element_text(size=20), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        panel.background = element_blank()) 
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-18-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Como o usu√°rio faria para construir estes histogramas e gr√°ficos de tend√™ncia sem utilizar a classifica√ß√£o por n√≠veis da vari√°vel &lt;strong&gt;am&lt;/strong&gt;? A constru√ß√£o destes gr√°ficos fica como exerc√≠cio para o usu√°rio.&lt;/p&gt;
&lt;h2 id=&#34;segunda-parte&#34;&gt;&lt;strong&gt;Segunda parte&lt;/strong&gt;&lt;/h2&gt;
&lt;h2 id=&#34;construindo-gr√°ficos-a-partir-de-um-conjunto-de-dados-original-usando-os-pacotes-tydeverse-tibble-e-dplyr-do-r&#34;&gt;Construindo gr√°ficos a partir de um conjunto de dados original usando os pacotes tydeverse, tibble e dplyr do R.&lt;/h2&gt;
&lt;p&gt;O que preciso saber do pacote &lt;strong&gt;dplyr&lt;/strong&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Fun√ß√µes&lt;/th&gt;
&lt;th&gt;Resultados&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;filter()&lt;/td&gt;
&lt;td&gt;seleciona observa√ß√µes das vari√°veis por seus valores assumidos&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;arrange()&lt;/td&gt;
&lt;td&gt;reordena as linhas (observa√ß√µes)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;select()&lt;/td&gt;
&lt;td&gt;seleciona vari√°veis por seus nomes (r√≥tulos)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;mutate()&lt;/td&gt;
&lt;td&gt;cria novas vari√°veis com fun√ß√µes de vari√°veis existentes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;summarize()&lt;/td&gt;
&lt;td&gt;reune muitos valores em um √∫nico resumo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;group_by()&lt;/td&gt;
&lt;td&gt;muda o escopo de cada fun√ß√£o anterior em todo o conjunto de dados para operar grupo por grupo.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Uma vez apresentado as fun√ß√µes do pacote &lt;strong&gt;dplyr&lt;/strong&gt;, vamos agora apresentar os argumentos dessas fun√ß√µes. O primeiro argumento √© um data frame. Os argumentos subsequentes descrevem o que fazer com o data frame usando os nomes das vari√°veis sem aspas.&lt;/p&gt;
&lt;p&gt;O pacote &lt;strong&gt;covid19br&lt;/strong&gt; foi criado por pesquisadores da UFMG e permite ao usu√°rio a coleta, em tempo real, de algumas informa√ß√µes sobre a doen√ßa &lt;strong&gt;COVID-19&lt;/strong&gt; nas unidades de sa√∫de do Brasil, apresentando informa√ß√µes como n√∫mero de casos e mortes novos e acumulados, diariamente, no Brasil e no mundo. Ainda, essas informa√ß√µes est√£o separadas por estado, regi√£o, munic√≠pios, por semana epidemiol√≥gica, datas, entre outros.&lt;/p&gt;
&lt;p&gt;N√≥s vamos aproveitar esse pacote para apresentarmos as fun√ß√µes do pacote &lt;strong&gt;dplyr&lt;/strong&gt; e tamb√©m construir gr√°ficos com o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;data &amp;lt;- downloadCovid19(&amp;quot;states&amp;quot;)# dados por munic√≠pios brasileiros
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Downloading COVID-19 data from the official Brazilian repository: https://covid.saude.gov.br/
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Please, be patient...
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  Done!
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;glimpse(data)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 26,136
## Columns: 12
## $ region       &amp;lt;chr&amp;gt; &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;North&amp;quot;, &amp;quot;No~
## $ state        &amp;lt;chr&amp;gt; &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO&amp;quot;, &amp;quot;RO~
## $ date         &amp;lt;date&amp;gt; 2020-02-25, 2020-02-26, 2020-02-27, 2020-02-28, 2020-02-~
## $ epi_week     &amp;lt;int&amp;gt; 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11~
## $ newCases     &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ accumCases   &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ newDeaths    &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ accumDeaths  &amp;lt;int&amp;gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ~
## $ newRecovered &amp;lt;int&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N~
## $ newFollowup  &amp;lt;int&amp;gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, N~
## $ pop          &amp;lt;dbl&amp;gt; 1777225, 1777225, 1777225, 1777225, 1777225, 1777225, 177~
## $ state_code   &amp;lt;int&amp;gt; 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 1~
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;N√£o se preocupe com a estrutura apresentada nesse conjunto de dados. Trata-se de um &lt;strong&gt;tibble&lt;/strong&gt;, um data frame com algumas particularidades. Note que essas estrutura de data frame traz algumas informa√ß√µes, como a dimens√£o dos dados, o tipo de vari√°vel que est√° em cada uma das colunas (categ√≥rica, inteiro, caractere, etc.), entre outras.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Representa√ß√£o&lt;/th&gt;
&lt;th&gt;Tipo de vari√°vel&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;int&lt;/td&gt;
&lt;td&gt;n√∫meros inteiros&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dbl&lt;/td&gt;
&lt;td&gt;doubles (n√∫meros reais)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;chr&lt;/td&gt;
&lt;td&gt;vetores de caracteres (strings)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dttm&lt;/td&gt;
&lt;td&gt;datas-tempos (uma data + um hor√°rio)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;fctr&lt;/td&gt;
&lt;td&gt;valores l√≥gicos (TRUE ou FALSE)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;date&lt;/td&gt;
&lt;td&gt;datas&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Antes de apresentarmos as fun√ß√µes do pacote &lt;strong&gt;dplyr&lt;/strong&gt; precisamos conhecer alguns caracteres l√≥gicos e suas representa√ß√µes.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Caractere l√≥gico&lt;/th&gt;
&lt;th&gt;Representa√ß√£o&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;==&lt;/td&gt;
&lt;td&gt;igual&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;amp;&lt;/td&gt;
&lt;td&gt;conectivo &lt;code&gt;e&lt;/code&gt; (interse√ß√£o)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;conectivo &lt;code&gt;ou&lt;/code&gt; (uni√£o)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;&lt;/td&gt;
&lt;td&gt;maior do que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;&lt;/td&gt;
&lt;td&gt;menor do que&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;gt;=&lt;/td&gt;
&lt;td&gt;maior do que ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&amp;lt;=&lt;/td&gt;
&lt;td&gt;menor do que ou igual a&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;!=&lt;/td&gt;
&lt;td&gt;diferente&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;%in%&lt;/td&gt;
&lt;td&gt;concatenar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As fun√ß√µes do pacote &lt;strong&gt;dplyr&lt;/strong&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;filter(data, date &amp;gt;= &amp;quot;2022-02-20&amp;quot; &amp;amp; state == &amp;quot;SP&amp;quot; &amp;amp; epi_week == 8)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##       region state       date epi_week newCases accumCases newDeaths
## 1: Southeast    SP 2022-02-20        8     6424    4935771        26
## 2: Southeast    SP 2022-02-21        8     2470    4938241        23
## 3: Southeast    SP 2022-02-22        8    15999    4954240       310
## 4: Southeast    SP 2022-02-23        8    15427    4969667       298
## 5: Southeast    SP 2022-02-24        8    15228    4984895       303
## 6: Southeast    SP 2022-02-25        8    14764    4999659       211
## 7: Southeast    SP 2022-02-26        8    11290    5010949       211
##    accumDeaths newRecovered newFollowup      pop state_code
## 1:      163160           NA          NA 45919049         35
## 2:      163183           NA          NA 45919049         35
## 3:      163493           NA          NA 45919049         35
## 4:      163791           NA          NA 45919049         35
## 5:      164094           NA          NA 45919049         35
## 6:      164305           NA          NA 45919049         35
## 7:      164516           NA          NA 45919049         35
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;arrange(data, state)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##        region state       date epi_week newCases accumCases newDeaths
##     1:  North    AC 2020-02-25        9        0          0         0
##     2:  North    AC 2020-02-26        9        0          0         0
##     3:  North    AC 2020-02-27        9        0          0         0
##     4:  North    AC 2020-02-28        9        0          0         0
##     5:  North    AC 2020-02-29        9        0          0         0
##    ---                                                               
## 26132:  North    TO 2022-10-15       41        0     344594         0
## 26133:  North    TO 2022-10-16       42        0     344594         0
## 26134:  North    TO 2022-10-17       42       19     344613         0
## 26135:  North    TO 2022-10-18       42        0     344613         0
## 26136:  North    TO 2022-10-19       42        0     344613         0
##        accumDeaths newRecovered newFollowup     pop state_code
##     1:           0           NA          NA  881935         12
##     2:           0           NA          NA  881935         12
##     3:           0           NA          NA  881935         12
##     4:           0           NA          NA  881935         12
##     5:           0           NA          NA  881935         12
##    ---                                                        
## 26132:        4205           NA          NA 1572866         17
## 26133:        4205           NA          NA 1572866         17
## 26134:        4205           NA          NA 1572866         17
## 26135:        4205           NA          NA 1572866         17
## 26136:        4205           NA          NA 1572866         17
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;select(data, region , date,  state, newCases, accumCases)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         region       date state newCases accumCases
##     1:   North 2020-02-25    RO        0          0
##     2:   North 2020-02-26    RO        0          0
##     3:   North 2020-02-27    RO        0          0
##     4:   North 2020-02-28    RO        0          0
##     5:   North 2020-02-29    RO        0          0
##    ---                                             
## 26132: Midwest 2022-10-15    DF        0     839752
## 26133: Midwest 2022-10-16    DF        0     839752
## 26134: Midwest 2022-10-17    DF        0     839752
## 26135: Midwest 2022-10-18    DF     2235     841987
## 26136: Midwest 2022-10-19    DF       78     842065
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;mutate(data, rate_newcases = newCases/pop*100000)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         region state       date epi_week newCases accumCases newDeaths
##     1:   North    RO 2020-02-25        9        0          0         0
##     2:   North    RO 2020-02-26        9        0          0         0
##     3:   North    RO 2020-02-27        9        0          0         0
##     4:   North    RO 2020-02-28        9        0          0         0
##     5:   North    RO 2020-02-29        9        0          0         0
##    ---                                                                
## 26132: Midwest    DF 2022-10-15       41        0     839752         0
## 26133: Midwest    DF 2022-10-16       42        0     839752         0
## 26134: Midwest    DF 2022-10-17       42        0     839752         0
## 26135: Midwest    DF 2022-10-18       42     2235     841987         0
## 26136: Midwest    DF 2022-10-19       42       78     842065         0
##        accumDeaths newRecovered newFollowup     pop state_code rate_newcases
##     1:           0           NA          NA 1777225         11      0.000000
##     2:           0           NA          NA 1777225         11      0.000000
##     3:           0           NA          NA 1777225         11      0.000000
##     4:           0           NA          NA 1777225         11      0.000000
##     5:           0           NA          NA 1777225         11      0.000000
##    ---                                                                      
## 26132:       11831           NA          NA 3015268         53      0.000000
## 26133:       11831           NA          NA 3015268         53      0.000000
## 26134:       11831           NA          NA 3015268         53      0.000000
## 26135:       11831           NA          NA 3015268         53     74.122765
## 26136:       11831           NA          NA 3015268         53      2.586835
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;summarize(data, mean_newdeaths=mean(newDeaths), desv_pad= sd(newDeaths),
                  standard_error=desv_pad/sqrt(length(data)))
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   mean_newdeaths desv_pad standard_error
## 1       26.30177 66.46069       19.18555
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;group_by(data, region, epi_week)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 26,136 x 12
## # Groups:   region, epi_week [265]
##    region state date       epi_week newCases accumCases newDea~1 accum~2 newRe~3
##    &amp;lt;chr&amp;gt;  &amp;lt;chr&amp;gt; &amp;lt;date&amp;gt;        &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;      &amp;lt;int&amp;gt;    &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;   &amp;lt;int&amp;gt;
##  1 North  RO    2020-02-25        9        0          0        0       0      NA
##  2 North  RO    2020-02-26        9        0          0        0       0      NA
##  3 North  RO    2020-02-27        9        0          0        0       0      NA
##  4 North  RO    2020-02-28        9        0          0        0       0      NA
##  5 North  RO    2020-02-29        9        0          0        0       0      NA
##  6 North  RO    2020-03-01       10        0          0        0       0      NA
##  7 North  RO    2020-03-02       10        0          0        0       0      NA
##  8 North  RO    2020-03-03       10        0          0        0       0      NA
##  9 North  RO    2020-03-04       10        0          0        0       0      NA
## 10 North  RO    2020-03-05       10        0          0        0       0      NA
## # ... with 26,126 more rows, 3 more variables: newFollowup &amp;lt;int&amp;gt;, pop &amp;lt;dbl&amp;gt;,
## #   state_code &amp;lt;int&amp;gt;, and abbreviated variable names 1: newDeaths,
## #   2: accumDeaths, 3: newRecovered
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Esse pacote √© muito √∫til quando desejamos realizar uma an√°lise explorat√≥ria de nossos dados. Vamos ent√£o construir alguns gr√°ficos utilizando os recursos desse pacote e tamb√©m do &lt;strong&gt;ggplot2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Suponha que estamos interessados em conhecer, ‚Äúa priori‚Äù, quantas mortes por COVID-19 ocorreram em cada uma das unidades federativas brasileiras, no dia 20-02-2022. Como proceder?&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;Dados &amp;lt;- select(data, epi_week , state, newDeaths, date)
resultados &amp;lt;- filter(Dados, epi_week == 8 &amp;amp; date == &amp;quot;2022-02-20&amp;quot;)
ggplot(resultados)+
geom_col(aes(x=as.factor(state), y=newDeaths, fill=as.factor(state)),
alpha=0.65, position = &amp;quot;stack&amp;quot;)+
labs(x = &amp;quot;Unidades da federa√ß√£o&amp;quot;, y = &amp;quot;Novas mortes - semana 30&amp;quot;)+
theme_bw()+
theme(legend.position=&amp;quot;none&amp;quot;,
legend.box = &amp;quot;vertical&amp;quot;,legend.title=element_text(size=8),
legend.text=element_text(size=8), axis.text=element_text(size=8),
axis.title=element_text(size=8), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
strip.text.x = element_text(size=0),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_fill_discrete(name=&amp;quot;UF&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-21-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;Um fato curioso deve ser notado: quando manipulamos o conto de dados data com as fun√ß√µes select e filter, n√≥s atribu√≠mos a cada tibble gerado por essas fun√ß√µes um r√≥tulo. Agora, imagine que, dentro do mesmo conjunto de dados, n√≥s precisamos utilizar todas as seis fun√ß√µes do pacote &lt;strong&gt;dplyr&lt;/strong&gt;. Seria invi√°vel proceder como da forma anterior. Para corrigir esse problema, foi criado o pacote &lt;strong&gt;magrittr&lt;/strong&gt; onde foi criado o operador pipe %&amp;gt;%. Essa ferramenta √© utilizada para expressar claramente uma sequ√™ncia de m√∫ltiplas opera√ß√µes. Este pacote j√° √© carregado automaticamente com o &lt;strong&gt;dplyr&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Em nosso pr√≥ximo exemplo, suponha que deseja-se conhecer a evolu√ß√£o di√°ria das novas mortes considerando o tempo de infec√ß√£o por COVID-19 da semana 1 at√© a semana 8 de 2021 e 2022, para as unidades federativas da regi√£o sudeste. Entretanto, para efeitos de compara√ß√£o, as popula√ß√µes de cada uma das UF&amp;rsquo;s se difere, o que torna a compara√ß√£o entre elas invi√°vel. Esse √© o motivo pelo qual calculamos algumas medidas auxiliares quando h√° heterogeneidade populacional. Uma dessas medidas √© denominada de taxa e seu c√°lculo √© oriundo da raz√£o entre o n√∫mero de casos favor√°veis e o total de indiv√≠duos da popula√ß√£o de cada uma das √°reas estudas, multiplicado por alguma constante de padroniza√ß√£o. N√≥s vamos respeitar as regras utilizadas pelo Instituto Brasileiro de Geografia e Estat√≠stica (IBGE) e considerar essa constante igual a 100,000. Desse modo:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;cor &amp;lt;- heat.colors(4, rev = TRUE)
resultados &amp;lt;- data %&amp;gt;%
mutate(year = as.numeric(format(date, &amp;quot;%Y&amp;quot;)),
       rate = newDeaths/pop*100000)%&amp;gt;%
select(newDeaths, epi_week, state, year, rate)%&amp;gt;%
filter(epi_week&amp;gt;= 1 &amp;amp; epi_week &amp;lt;= 8 &amp;amp; state %in% c(&amp;quot;SP&amp;quot;, &amp;quot;RJ&amp;quot;, &amp;quot;MG&amp;quot;, &amp;quot;ES&amp;quot;) &amp;amp; year %in% c(2021, 2022))
ggplot(resultados, aes(x=as.factor(epi_week), y = rate, fill=as.factor(state)))+
facet_wrap(~year)+
geom_bar(stat=&amp;quot;identity&amp;quot;, position = &amp;quot;dodge&amp;quot;, alpha=0.45) +
labs(x = &amp;quot;Semana de infec√ß√£o&amp;quot;, y = &amp;quot;Novas mortes - Sudeste&amp;quot;) +
theme_bw()+
theme(legend.position=&amp;quot;right&amp;quot;,
legend.box = &amp;quot;vertical&amp;quot;,legend.title=element_text(size=8),
legend.text=element_text(size=8), axis.text=element_text(size=8),
axis.title=element_text(size=8), axis.line = element_line(colour = &amp;quot;black&amp;quot;),
strip.text.x = element_text(size=0),
strip.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())+
scale_fill_manual(name=&amp;quot;UF&amp;quot;, values = cor)
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-22-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;p&gt;N√≥s tamb√©m podemos produzir mapas utilizando o pacote &lt;strong&gt;ggplot2&lt;/strong&gt;. Entretanto, n√≥s precisamos de algum arquivo que contenha as coordenadas do mapa desejado em forma de pol√≠gonos ou at√© mesmo imagens (raster). Para tal, n√≥s vamos utilizar o pacote &lt;strong&gt;geobr&lt;/strong&gt;, que foi criado pelo Instituto de Pesquisa Econ√¥mica Aplicada - Ipea. Vejamos:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;uf &amp;lt;- data %&amp;gt;%
  select(state, newDeaths, newCases, accumDeaths, accumCases, 
         pop, date)%&amp;gt;%
  filter(date == &amp;quot;2022-02-23&amp;quot;)%&amp;gt;%
  mutate(ratenewcases = newCases/pop*100000,
            rateaccumcases = accumCases/pop*100000,
            ratenewdeaths = newDeaths/pop*100000,
            rateaccumdeaths = accumDeaths/pop*100000)
library(geobr)
dados_mapa &amp;lt;- read_state(year=2019, showProgress = FALSE)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Using year 2019
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;colnames(dados_mapa)[2] &amp;lt;- &amp;quot;state&amp;quot;
dados_final &amp;lt;- left_join(dados_mapa, uf, &amp;quot;state&amp;quot;)
glimpse(dados_final)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 27
## Columns: 16
## $ code_state      &amp;lt;dbl&amp;gt; 11, 12, 13, 14, 15, 16, 17, 21, 22, 23, 24, 25, 26, 27~
## $ state           &amp;lt;chr&amp;gt; &amp;quot;RO&amp;quot;, &amp;quot;AC&amp;quot;, &amp;quot;AM&amp;quot;, &amp;quot;RR&amp;quot;, &amp;quot;PA&amp;quot;, &amp;quot;AP&amp;quot;, &amp;quot;TO&amp;quot;, &amp;quot;MA&amp;quot;, &amp;quot;PI&amp;quot;, ~
## $ name_state      &amp;lt;chr&amp;gt; &amp;quot;Rond√¥nia&amp;quot;, &amp;quot;Acre&amp;quot;, &amp;quot;Amaz√¥nas&amp;quot;, &amp;quot;Roraima&amp;quot;, &amp;quot;Par√°&amp;quot;, &amp;quot;Am~
## $ code_region     &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, ~
## $ name_region     &amp;lt;chr&amp;gt; &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, &amp;quot;Norte&amp;quot;, ~
## $ newDeaths       &amp;lt;int&amp;gt; 16, 4, 3, 1, 17, 2, 2, 14, 5, 57, 7, 9, 15, 12, 4, 26,~
## $ newCases        &amp;lt;int&amp;gt; 2741, 654, 575, 361, 2476, 52, 723, 1283, 645, 1907, 1~
## $ accumDeaths     &amp;lt;int&amp;gt; 7036, 1966, 14101, 2126, 17716, 2100, 4095, 10739, 761~
## $ accumCases      &amp;lt;int&amp;gt; 366864, 119090, 571174, 152146, 709489, 160025, 296677~
## $ pop             &amp;lt;dbl&amp;gt; 1777225, 881935, 4144597, 605761, 8602865, 845731, 157~
## $ date            &amp;lt;date&amp;gt; 2022-02-23, 2022-02-23, 2022-02-23, 2022-02-23, 2022-~
## $ ratenewcases    &amp;lt;dbl&amp;gt; 154.229206, 74.155125, 13.873484, 59.594461, 28.781110~
## $ rateaccumcases  &amp;lt;dbl&amp;gt; 20642.519, 13503.263, 13781.171, 25116.506, 8247.125, ~
## $ ratenewdeaths   &amp;lt;dbl&amp;gt; 0.90027993, 0.45354816, 0.07238339, 0.16508161, 0.1976~
## $ rateaccumdeaths &amp;lt;dbl&amp;gt; 395.8981, 222.9189, 340.2261, 350.9635, 205.9314, 248.~
## $ geom            &amp;lt;MULTIPOLYGON [¬∞]&amp;gt; MULTIPOLYGON (((-65.3815 -1..., MULTIPOLY~
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;#plotar os mapas
dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = ratenewcases), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Novos casos - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = ratenewdeaths), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Novas mortes - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-24-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = rateaccumcases), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Casos acumulados - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-25-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;
&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;dados_final %&amp;gt;%
  ggplot() +
  geom_sf(aes(fill = rateaccumdeaths), color = &amp;quot;black&amp;quot;) +
  geom_sf_text(aes(label = state), size = 2, color = &amp;quot;white&amp;quot;)+
  labs(title = &amp;quot;Mortes acumuladas - COVID-19 - Brasil - 23-02-2022&amp;quot;, fill = &amp;quot;Taxa&amp;quot;) +
  theme_minimal()+
  theme(axis.title = element_blank(),
        axis.text = element_blank(),
        axis.ticks = element_blank(),
        panel.grid = element_blank())
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in st_point_on_surface.sfc(sf::st_zm(x)): st_point_on_surface may not
## give correct results for longitude/latitude data
&lt;/code&gt;&lt;/pre&gt;
&lt;img src=&#34;https://henriqueest.github.io/courses/example/python_files/figure-html/unnamed-chunk-26-1.png&#34; width=&#34;672&#34; style=&#34;display: block; margin: auto;&#34; /&gt;</description>
    </item>
    
  </channel>
</rss>
